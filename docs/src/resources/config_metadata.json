{
  "all_settings": [
    {
      "key": "ADDITIONAL_MIDDLEWARE",
      "title": "Additional Middleware",
      "description": "Additional middleware functions to apply to the Flask application",
      "details": "List of callable middleware functions that will be added to the Flask application's middleware stack. These functions are executed for each request and can modify request/response handling.",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "[]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ADDITIONAL_MIDDLEWARE"
    },
    {
      "key": "ADDITIONAL_MODULE_DS_MAP",
      "title": "Additional Module Ds Map",
      "description": "Additional datasource modules and classes mapping",
      "details": "Dictionary mapping module paths to datasource class names that should be registered with Superset in addition to the default datasources. Used to extend supported datasource types.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ADDITIONAL_MODULE_DS_MAP"
    },
    {
      "key": "ADDON_MANAGERS",
      "title": "Addon Managers",
      "description": "List of addon manager classes for extending Superset functionality",
      "details": "List of addon manager classes that can be used to extend Superset with additional functionality, plugins, or integrations. Each manager should implement the required addon interface.",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "[]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ADDON_MANAGERS"
    },
    {
      "key": "ADVANCED_DATA_TYPES",
      "title": "Advanced Data Types",
      "description": "Advanced data type plugins configuration",
      "details": "Dictionary mapping advanced data type names to their plugin implementations. Includes plugins for internet addresses, ports, and other specialized data types that provide enhanced validation and formatting.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "<dict with 2 items>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ADVANCED_DATA_TYPES"
    },
    {
      "key": "ALEMBIC_SKIP_LOG_CONFIG",
      "title": "Alembic Skip Log Config",
      "description": "Skip Alembic logging configuration setup",
      "details": "When True, prevents Alembic from configuring its own logging. Useful when you want to manage logging configuration separately or avoid conflicts with existing logging setup.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALEMBIC_SKIP_LOG_CONFIG"
    },
    {
      "key": "ALERT_MINIMUM_INTERVAL",
      "title": "Alert Minimum Interval",
      "description": "Minimum interval in seconds between alert executions to prevent spam",
      "details": "",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "0",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_MINIMUM_INTERVAL"
    },
    {
      "key": "ALERT_REPORTS_CRON_WINDOW_SIZE",
      "title": "Alert Reports Cron Window Size",
      "description": "Size of the sliding cron window for alerts/reports in seconds, should be synced with celery beat config minus 1 second",
      "details": "",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "59",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_CRON_WINDOW_SIZE"
    },
    {
      "key": "ALERT_REPORTS_DEFAULT_CRON_VALUE",
      "title": "Alert Reports Default Cron Value",
      "description": "Default cron schedule for alert reports",
      "details": "Default cron expression used when creating new alert reports. The default '0 0 * * *' runs every day at midnight. Users can override this when creating individual alerts.",
      "type": "str",
      "category": "core",
      "group": "Alert Reports",
      "default": "0 0 * * *",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_DEFAULT_CRON_VALUE"
    },
    {
      "key": "ALERT_REPORTS_DEFAULT_RETENTION",
      "title": "Alert Reports Default Retention",
      "description": "Default retention period for alert report logs in days",
      "details": "Number of days to retain alert report execution logs and results. After this period, old logs are automatically cleaned up to prevent database bloat.",
      "type": "int",
      "category": "core",
      "group": "Alert Reports",
      "default": "90",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_DEFAULT_RETENTION"
    },
    {
      "key": "ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT",
      "title": "Alert Reports Default Working Timeout",
      "description": "Default timeout in seconds for alert/report execution tasks",
      "details": "",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "3600",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT"
    },
    {
      "key": "ALERT_REPORTS_EXECUTORS",
      "title": "Alert Reports Executors",
      "description": "Default executors for alert reports",
      "details": "List of default executor types for alert reports. 'owner' means the report runs with the permissions of the alert owner. Other options may include specific user roles or service accounts.",
      "type": "list",
      "category": "core",
      "group": "Alert Reports",
      "default": "['owner']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_EXECUTORS"
    },
    {
      "key": "ALERT_REPORTS_MAX_CUSTOM_SCREENSHOT_WIDTH",
      "title": "Alert Reports Max Custom Screenshot Width",
      "description": "Maximum width in pixels for custom screenshot dimensions in alert reports",
      "details": "",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "2400",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_MAX_CUSTOM_SCREENSHOT_WIDTH"
    },
    {
      "key": "ALERT_REPORTS_MIN_CUSTOM_SCREENSHOT_WIDTH",
      "title": "Alert Reports Min Custom Screenshot Width",
      "description": "Minimum width in pixels for custom screenshot dimensions in alert reports",
      "details": "",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "600",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_MIN_CUSTOM_SCREENSHOT_WIDTH"
    },
    {
      "key": "ALERT_REPORTS_NOTIFICATION_DRY_RUN",
      "title": "Alert Reports Notification Dry Run",
      "description": "Enable dry run mode for alert report notifications",
      "details": "When True, alert reports will execute and log results but will not send actual notifications. Useful for testing and debugging alert configurations without spamming recipients.",
      "type": "bool",
      "category": "core",
      "group": "Alert Reports",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_NOTIFICATION_DRY_RUN"
    },
    {
      "key": "ALERT_REPORTS_QUERY_EXECUTION_MAX_TRIES",
      "title": "Alert Reports Query Execution Max Tries",
      "description": "Maximum number of retry attempts for query execution in alert reports",
      "details": "",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "1",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_QUERY_EXECUTION_MAX_TRIES"
    },
    {
      "key": "ALERT_REPORTS_WORKING_SOFT_TIME_OUT_LAG",
      "title": "Alert Reports Working Soft Time Out Lag",
      "description": "Soft timeout lag in seconds for alert/report worker tasks before graceful shutdown",
      "details": "",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "1",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_WORKING_SOFT_TIME_OUT_LAG"
    },
    {
      "key": "ALERT_REPORTS_WORKING_TIME_OUT_KILL",
      "title": "Alert Reports Working Time Out Kill",
      "description": "Whether to forcefully kill alert/report worker tasks that exceed timeout",
      "details": "",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_WORKING_TIME_OUT_KILL"
    },
    {
      "key": "ALERT_REPORTS_WORKING_TIME_OUT_LAG",
      "title": "Alert Reports Working Time Out Lag",
      "description": "Hard timeout lag in seconds for alert/report worker tasks before forced termination",
      "details": "",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "10",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALERT_REPORTS_WORKING_TIME_OUT_LAG"
    },
    {
      "key": "ALLOWED_EXTENSIONS",
      "title": "Allowed Extensions",
      "description": "Allowed file extensions for database uploads",
      "details": "Set of file extensions allowed for uploading data to databases. Combines Excel extensions (xlsx, xls), CSV extensions (csv, tsv, txt), and columnar extensions (parquet, zip).",
      "type": "set",
      "category": "core",
      "group": "File Upload",
      "default": "<set with 7 items>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALLOWED_EXTENSIONS"
    },
    {
      "key": "ALLOWED_EXTRA_AUTHENTICATIONS",
      "title": "Allowed Extra Authentications",
      "description": "Additional authentication methods allowed for database connections",
      "details": "Dictionary of extra authentication methods that can be used when connecting to databases beyond the standard connection parameters. Keys are method names, values are configuration options.",
      "type": "dict",
      "category": "core",
      "group": "Authentication",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ALLOWED_EXTRA_AUTHENTICATIONS"
    },
    {
      "key": "ALLOWED_USER_CSV_SCHEMA_FUNC",
      "title": "Allowed User Csv Schema Func",
      "description": "Custom function to validate CSV schema for user uploads",
      "details": "Optional callable that validates CSV schema during user uploads. The function receives the user object and table name, returning a dictionary with schema validation rules or permissions.",
      "type": "Callable",
      "category": "core",
      "group": "CSV Upload",
      "default": "<function instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__ALLOWED_USER_CSV_SCHEMA_FUNC"
    },
    {
      "key": "APPLICATION_ROOT",
      "title": "Application Root",
      "description": "Application root path for Flask routing",
      "details": "Flask APPLICATION_ROOT setting that defines the root path where the application is mounted. Useful when Superset is served under a subpath (e.g., '/superset') rather than at the domain root.",
      "type": "str",
      "category": "core",
      "group": "Flask Configuration",
      "default": "/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__APPLICATION_ROOT"
    },
    {
      "key": "APP_ICON",
      "title": "App Icon",
      "description": "URL path to the application icon displayed in the UI header",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "/static/assets/images/superset-logo-horiz.png",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__APP_ICON"
    },
    {
      "key": "APP_NAME",
      "title": "App Name",
      "description": "Name of the application displayed in the UI and used for branding",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "Superset",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__APP_NAME"
    },
    {
      "key": "APP_THEME",
      "title": "App Theme",
      "description": "Application theme configuration",
      "details": "Theme configuration for customizing the Superset UI appearance. Can specify color schemes, styling options, or custom theme implementations.",
      "type": "str",
      "category": "core",
      "group": "UI Customization",
      "default": "",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__APP_THEME"
    },
    {
      "key": "AUTH_API_LOGIN_ALLOW_MULTIPLE_PROVIDERS",
      "title": "Auth Api Login Allow Multiple Providers",
      "description": "Allow users to authenticate using multiple authentication providers via API login",
      "details": "",
      "type": "bool",
      "category": "security",
      "group": "",
      "default": "False",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_API_LOGIN_ALLOW_MULTIPLE_PROVIDERS"
    },
    {
      "key": "AUTH_DB",
      "title": "Auth Db",
      "description": "Flask-AppBuilder database authentication type constant (AUTH_DB = 1)",
      "details": "",
      "type": "int",
      "category": "security",
      "group": "",
      "default": "1",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_DB"
    },
    {
      "key": "AUTH_DB_FAKE_PASSWORD_HASH_CHECK",
      "title": "Auth Db Fake Password Hash Check",
      "description": "Perform fake password hash checking to prevent timing attacks during authentication",
      "details": "",
      "type": "str",
      "category": "security",
      "group": "",
      "default": "scrypt:32768:8:1$wiDa0ruWlIPhp9LM$6e409d093e62ad54df2af895d0e125b05ff6cf64148350189ffc4bcc71286ed...",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_DB_FAKE_PASSWORD_HASH_CHECK"
    },
    {
      "key": "AUTH_RATE_LIMIT",
      "title": "Auth Rate Limit",
      "description": "Rate limit for authentication attempts to prevent brute force attacks",
      "details": "",
      "type": "str",
      "category": "security",
      "group": "",
      "default": "5 per second",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_RATE_LIMIT"
    },
    {
      "key": "AUTH_RATE_LIMITED",
      "title": "Auth Rate Limited",
      "description": "Enable rate limiting for authentication endpoints to enhance security",
      "details": "",
      "type": "bool",
      "category": "security",
      "group": "",
      "default": "True",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_RATE_LIMITED"
    },
    {
      "key": "AUTH_ROLES_SYNC_AT_LOGIN",
      "title": "Auth Roles Sync At Login",
      "description": "Synchronize user roles from external authentication provider at each login",
      "details": "",
      "type": "bool",
      "category": "security",
      "group": "",
      "default": "False",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_ROLES_SYNC_AT_LOGIN"
    },
    {
      "key": "AUTH_ROLE_ADMIN",
      "title": "Auth Role Admin",
      "description": "Name of the administrator role with full system privileges",
      "details": "",
      "type": "str",
      "category": "security",
      "group": "",
      "default": "Admin",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_ROLE_ADMIN"
    },
    {
      "key": "AUTH_ROLE_PUBLIC",
      "title": "Auth Role Public",
      "description": "Name of the public role for unauthenticated users with limited access",
      "details": "",
      "type": "str",
      "category": "security",
      "group": "",
      "default": "Public",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_ROLE_PUBLIC"
    },
    {
      "key": "AUTH_TYPE",
      "title": "Auth Type",
      "description": "Flask-AppBuilder authentication type (1=AUTH_DB, 2=AUTH_LDAP, 3=AUTH_OAUTH, etc.)",
      "details": "",
      "type": "int",
      "category": "security",
      "group": "",
      "default": "1",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_TYPE"
    },
    {
      "key": "AUTH_USER_REGISTRATION",
      "title": "Auth User Registration",
      "description": "Enable user self-registration",
      "details": "When enabled, allows users to register themselves for accounts without admin intervention. Users will be assigned the role specified in AUTH_USER_REGISTRATION_ROLE.",
      "type": "bool",
      "category": "security",
      "group": "",
      "default": "False",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_USER_REGISTRATION"
    },
    {
      "key": "AUTH_USER_REGISTRATION_ROLE",
      "title": "Auth User Registration Role",
      "description": "Default role for self-registered users",
      "details": "Specifies the role that will be automatically assigned to users who register themselves when AUTH_USER_REGISTRATION is enabled.",
      "type": "str",
      "category": "security",
      "group": "",
      "default": "Public",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_USER_REGISTRATION_ROLE"
    },
    {
      "key": "AUTH_USER_REGISTRATION_ROLE_JMESPATH",
      "title": "Auth User Registration Role Jmespath",
      "description": "JMESPath expression for dynamic role assignment",
      "details": "Optional JMESPath expression to dynamically determine the role for self-registered users based on user attributes. Overrides AUTH_USER_REGISTRATION_ROLE when set.",
      "type": "None",
      "category": "security",
      "group": "",
      "default": "None",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__AUTH_USER_REGISTRATION_ROLE_JMESPATH"
    },
    {
      "key": "BABEL_DEFAULT_FOLDER",
      "title": "Babel Default Folder",
      "description": "Default folder for translation files",
      "details": "Specifies the directory containing translation files for internationalization support. This is where Flask-Babel looks for .po and .mo files.",
      "type": "str",
      "category": "ui",
      "group": "",
      "default": "superset/translations",
      "external": true,
      "source": "flask-babel",
      "supports_callable": false,
      "env_var": "SUPERSET__BABEL_DEFAULT_FOLDER"
    },
    {
      "key": "BABEL_DEFAULT_LOCALE",
      "title": "Babel Default Locale",
      "description": "Default locale for internationalization",
      "details": "The default locale used when no locale is specified by the user or when a requested locale is not available. Uses standard locale codes (e.g., 'en', 'es', 'fr').",
      "type": "str",
      "category": "ui",
      "group": "",
      "default": "en",
      "external": true,
      "source": "flask-babel",
      "supports_callable": false,
      "env_var": "SUPERSET__BABEL_DEFAULT_LOCALE"
    },
    {
      "key": "BABEL_DEFAULT_TIMEZONE",
      "title": "Babel Default Timezone",
      "description": "Default timezone for date/time formatting",
      "details": "The default timezone used for displaying dates and times when no user-specific timezone is set. Uses timezone names from the IANA Time Zone Database.",
      "type": "str",
      "category": "ui",
      "group": "",
      "default": "UTC",
      "external": true,
      "source": "flask-babel",
      "supports_callable": false,
      "env_var": "SUPERSET__BABEL_DEFAULT_TIMEZONE"
    },
    {
      "key": "BABEL_DOMAIN",
      "title": "Babel Domain",
      "description": "Translation domain name",
      "details": "The domain name used by Flask-Babel to identify translation files. This corresponds to the base name of .po/.mo files (e.g., 'messages.po').",
      "type": "str",
      "category": "ui",
      "group": "",
      "default": "messages",
      "external": true,
      "source": "flask-babel",
      "supports_callable": false,
      "env_var": "SUPERSET__BABEL_DOMAIN"
    },
    {
      "key": "BABEL_TRANSLATION_DIRECTORIES",
      "title": "Babel Translation Directories",
      "description": "Directories to search for translation files",
      "details": "Colon-separated list of directories where Flask-Babel should look for translation files. Includes both application and Flask-AppBuilder translations.",
      "type": "str",
      "category": "ui",
      "group": "",
      "default": "/Users/max/code/superset-worktree/flask_config/.venv/lib/python3.11/site-packages/flask_appbuilde...",
      "external": true,
      "source": "flask-babel",
      "supports_callable": false,
      "env_var": "SUPERSET__BABEL_TRANSLATION_DIRECTORIES"
    },
    {
      "key": "BACKUP_COUNT",
      "title": "Backup Count",
      "description": "Number of log backup files to retain",
      "details": "When using rotating file handlers for logging, this specifies how many backup log files to keep before deleting the oldest ones.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "30",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__BACKUP_COUNT"
    },
    {
      "key": "BASE_DIR",
      "title": "Base Dir",
      "description": "Base directory path for Superset installation",
      "details": "Absolute path to the Superset package directory, computed from the installed superset package location. Used as a reference for relative paths throughout the application.",
      "type": "str",
      "category": "core",
      "group": "File Paths",
      "default": "/Users/max/code/superset-worktree/flask_config/superset",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__BASE_DIR"
    },
    {
      "key": "BLUEPRINTS",
      "title": "Blueprints",
      "description": "Additional Flask blueprints to register",
      "details": "List of Flask blueprint objects or modules to register with the application. Allows extending Superset with custom functionality.",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "[]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__BLUEPRINTS"
    },
    {
      "key": "BUG_REPORT_ICON",
      "title": "Bug Report Icon",
      "description": "Icon to display for bug report link",
      "details": "Optional icon class or image URL to display alongside the bug report link in the UI. If not specified, a default icon or text-only link will be used.",
      "type": "None",
      "category": "core",
      "group": "Bug Reporting",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__BUG_REPORT_ICON"
    },
    {
      "key": "BUG_REPORT_TEXT",
      "title": "Bug Report Text",
      "description": "Text to display for the bug report link",
      "details": "Text label shown for the bug report link in the UI. Can be customized to match your organization's preferred terminology or language.",
      "type": "str",
      "category": "core",
      "group": "Bug Reporting",
      "default": "Report a bug",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__BUG_REPORT_TEXT"
    },
    {
      "key": "BUG_REPORT_URL",
      "title": "Bug Report Url",
      "description": "URL for bug report submissions",
      "details": "URL where users can report bugs or issues. When set, a bug report link will appear in the UI. Typically points to an issue tracker, help desk, or bug reporting system.",
      "type": "None",
      "category": "core",
      "group": "Bug Reporting",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__BUG_REPORT_URL"
    },
    {
      "key": "BUILD_NUMBER",
      "title": "Build Number",
      "description": "Build number for deployment tracking",
      "details": "Build number or identifier shown in the About section. Can be replaced at build time to expose build information, deployment version, or CI/CD pipeline details for tracking and debugging.",
      "type": "None",
      "category": "core",
      "group": "Version Information",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__BUILD_NUMBER"
    },
    {
      "key": "CACHE_DEFAULT_TIMEOUT",
      "title": "Cache Default Timeout",
      "description": "Default cache timeout in seconds",
      "details": "The default expiration time for cached items when no specific timeout is provided. Set to 86400 seconds (24 hours) by default.",
      "type": "int",
      "category": "cache",
      "group": "",
      "default": "86400",
      "external": true,
      "source": "flask-caching",
      "supports_callable": false,
      "env_var": "SUPERSET__CACHE_DEFAULT_TIMEOUT"
    },
    {
      "key": "CACHE_WARMUP_EXECUTORS",
      "title": "Cache Warmup Executors",
      "description": "User roles allowed to trigger cache warmup",
      "details": "List of user roles that are permitted to execute cache warmup operations. By default, only the chart/dashboard owner can warm up their cache.",
      "type": "list",
      "category": "cache",
      "group": "",
      "default": "['owner']",
      "external": true,
      "source": "flask-caching",
      "supports_callable": false,
      "env_var": "SUPERSET__CACHE_WARMUP_EXECUTORS"
    },
    {
      "key": "CATALOGS_SIMPLIFIED_MIGRATION",
      "title": "Catalogs Simplified Migration",
      "description": "Enable simplified catalog migration process",
      "details": "When True, enables a simplified migration process for database catalogs. This can streamline the migration of database metadata and catalog structures during upgrades or data source changes.",
      "type": "bool",
      "category": "core",
      "group": "Database Migration",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CATALOGS_SIMPLIFIED_MIGRATION"
    },
    {
      "key": "CELERY_BEAT_SCHEDULER_EXPIRES",
      "title": "Celery Beat Scheduler Expires",
      "description": "Expiration time for Celery beat scheduler entries",
      "details": "Timedelta object defining how long scheduled Celery beat entries remain valid if not executed. Prevents stale scheduled tasks from accumulating and helps maintain scheduler performance.",
      "type": "timedelta",
      "category": "core",
      "group": "Celery Configuration",
      "default": "<timedelta instance>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CELERY_BEAT_SCHEDULER_EXPIRES"
    },
    {
      "key": "CELERY_CONFIG",
      "title": "Celery Config",
      "description": "Celery configuration class for async task processing",
      "details": "Configuration class that defines Celery settings for asynchronous task processing, including broker settings, result backends, and task routing. Set to None to disable Celery functionality.",
      "type": "Callable",
      "category": "core",
      "group": "Celery Configuration",
      "default": "<type instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__CELERY_CONFIG"
    },
    {
      "key": "CHANGE_ME_SECRET_KEY",
      "title": "Change Me Secret Key",
      "description": "Default secret key that must be changed in production",
      "details": "Default Flask secret key used for session management and security. This MUST be changed to a strong, random string in production environments. Use the SUPERSET_SECRET_KEY environment variable or override in superset_config.py.",
      "type": "str",
      "category": "core",
      "group": "Security",
      "default": "CHANGE_ME_TO_A_COMPLEX_RANDOM_SECRET",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CHANGE_ME_SECRET_KEY"
    },
    {
      "key": "COLUMNAR_EXTENSIONS",
      "title": "Columnar Extensions",
      "description": "Supported columnar file format extensions",
      "details": "Set of file extensions for columnar data formats supported for upload. Includes 'parquet' for Apache Parquet files and 'zip' for compressed columnar data archives.",
      "type": "set",
      "category": "core",
      "group": "File Upload",
      "default": "<set with 2 items>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COLUMNAR_EXTENSIONS"
    },
    {
      "key": "COMMON_BOOTSTRAP_OVERRIDES_FUNC",
      "title": "Common Bootstrap Overrides Func",
      "description": "Custom function to override common bootstrap configuration",
      "details": "Optional callable that receives the Flask app instance and can override common bootstrap configurations. Allows for custom initialization logic that runs during application startup.",
      "type": "Callable",
      "category": "core",
      "group": "Application Bootstrap",
      "default": "<function instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__COMMON_BOOTSTRAP_OVERRIDES_FUNC"
    },
    {
      "key": "COMPRESS_ALGORITHM",
      "title": "Compress Algorithm",
      "description": "Ordered list of compression algorithms to try when compressing responses.",
      "details": "Flask-Compress will try each algorithm in order until it finds one supported by the client. Supported algorithms include zstd (fastest), br (Brotli), gzip, and deflate. The first matching algorithm will be used for compression.",
      "type": "list",
      "category": "core",
      "group": "Compression",
      "default": "['zstd', 'br', 'gzip', 'deflate']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_ALGORITHM"
    },
    {
      "key": "COMPRESS_BR_BLOCK",
      "title": "Compress Br Block",
      "description": "Brotli compression block size hint (0 for automatic).",
      "details": "Controls the input block size hint for Brotli compression. A value of 0 lets Brotli choose automatically based on input size. Larger values can improve compression ratio but use more memory.",
      "type": "int",
      "category": "core",
      "group": "Compression",
      "default": "0",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_BR_BLOCK"
    },
    {
      "key": "COMPRESS_BR_LEVEL",
      "title": "Compress Br Level",
      "description": "Brotli compression quality level (0-11, higher is better compression).",
      "details": "Controls the quality/compression ratio for Brotli compression. Range is 0-11 where 0 is fastest/least compression and 11 is slowest/best compression. Default of 4 provides good balance of speed and compression.",
      "type": "int",
      "category": "core",
      "group": "Compression",
      "default": "4",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_BR_LEVEL"
    },
    {
      "key": "COMPRESS_BR_MODE",
      "title": "Compress Br Mode",
      "description": "Brotli compression mode (0=generic, 1=text, 2=font).",
      "details": "Specifies the compression mode for Brotli: 0 (generic/default), 1 (text mode optimized for UTF-8), or 2 (font mode optimized for WOFF 2.0 fonts). Generic mode works well for most content types.",
      "type": "int",
      "category": "core",
      "group": "Compression",
      "default": "0",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_BR_MODE"
    },
    {
      "key": "COMPRESS_BR_WINDOW",
      "title": "Compress Br Window",
      "description": "Brotli sliding window size (10-24, larger improves compression).",
      "details": "Controls the sliding window size for Brotli compression as a power of 2. Range is 10-24, representing window sizes from 1KB to 16MB. Larger windows can improve compression ratio for larger files but use more memory.",
      "type": "int",
      "category": "core",
      "group": "Compression",
      "default": "22",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_BR_WINDOW"
    },
    {
      "key": "COMPRESS_CACHE_BACKEND",
      "title": "Compress Cache Backend",
      "description": "Cache backend for storing compressed responses (None disables caching).",
      "details": "Optional cache backend to store compressed responses and avoid recompressing the same content. Can use any Flask-Caching backend. When None, compression happens on every request which may impact performance for large responses.",
      "type": "None",
      "category": "core",
      "group": "Compression",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_CACHE_BACKEND"
    },
    {
      "key": "COMPRESS_CACHE_KEY",
      "title": "Compress Cache Key",
      "description": "Function to generate cache keys for compressed responses.",
      "details": "Optional callable that generates cache keys for storing compressed responses. Should return a unique string based on request properties. If None and caching is enabled, a default key generation strategy is used.",
      "type": "None",
      "category": "core",
      "group": "Compression",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_CACHE_KEY"
    },
    {
      "key": "COMPRESS_DEFLATE_LEVEL",
      "title": "Compress Deflate Level",
      "description": "Deflate compression level (-1 for default, 0-9 for explicit level).",
      "details": "Controls the compression level for deflate algorithm. -1 uses the default level (usually 6), 0 is no compression (fastest), and 9 is maximum compression (slowest). Higher levels provide better compression but use more CPU.",
      "type": "int",
      "category": "core",
      "group": "Compression",
      "default": "-1",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_DEFLATE_LEVEL"
    },
    {
      "key": "COMPRESS_LEVEL",
      "title": "Compress Level",
      "description": "Default compression level for gzip (0-9, higher is better compression).",
      "details": "Controls the compression level for gzip algorithm. Range is 0-9 where 0 is fastest/no compression and 9 is slowest/best compression. Default of 6 provides good balance between compression ratio and speed.",
      "type": "int",
      "category": "core",
      "group": "Compression",
      "default": "6",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_LEVEL"
    },
    {
      "key": "COMPRESS_MIMETYPES",
      "title": "Compress Mimetypes",
      "description": "List of MIME types that should be compressed.",
      "details": "Specifies which content types are eligible for compression. Includes text-based formats (HTML, CSS, JS, JSON, XML) and compressible binary formats (fonts, SVG). Binary formats like images and videos are typically not included as they're already compressed.",
      "type": "list",
      "category": "core",
      "group": "Compression",
      "default": "['text/html', 'text/css', 'text/plain', 'text/xml', 'text/x-component', 'text/javascript', 'application/x-javascript', 'application/javascript', 'application/json', 'application/manifest+json', 'application/vnd.api+json', 'application/xml', 'application/xhtml+xml', 'application/rss+xml', 'application/atom+xml', 'application/vnd.ms-fontobject', 'application/x-font-ttf', 'application/x-font-opentype', 'application/x-font-Truetype', 'image/svg+xml', 'image/x-icon', 'image/vnd.microsoft.icon', 'font/ttf', 'font/eot', 'font/otf', 'font/opentype']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_MIMETYPES"
    },
    {
      "key": "COMPRESS_MIN_SIZE",
      "title": "Compress Min Size",
      "description": "Minimum response size in bytes to trigger compression.",
      "details": "Only responses larger than this size will be compressed. Small responses may not benefit from compression due to overhead, and the compression headers might make them larger. Default of 500 bytes is a reasonable threshold.",
      "type": "int",
      "category": "core",
      "group": "Compression",
      "default": "500",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_MIN_SIZE"
    },
    {
      "key": "COMPRESS_REGISTER",
      "title": "Compress Register",
      "description": "Whether to automatically register compression for all endpoints.",
      "details": "When True, Flask-Compress automatically applies compression to all eligible responses. When False, compression must be manually enabled per route using decorators. Default True provides automatic compression for all responses.",
      "type": "bool",
      "category": "core",
      "group": "Compression",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_REGISTER"
    },
    {
      "key": "COMPRESS_STREAMS",
      "title": "Compress Streams",
      "description": "Whether to compress streaming responses.",
      "details": "When True, enables compression for streaming/chunked responses. When False, only complete responses are compressed. Streaming compression can reduce time-to-first-byte but may impact overall performance for some use cases.",
      "type": "bool",
      "category": "core",
      "group": "Compression",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_STREAMS"
    },
    {
      "key": "COMPRESS_ZSTD_LEVEL",
      "title": "Compress Zstd Level",
      "description": "Zstandard compression level (1-22, higher is better compression).",
      "details": "Controls the compression level for Zstandard (zstd) algorithm. Range is 1-22 where 1 is fastest and 22 is best compression. Default of 3 provides good balance. Zstd typically offers better speed and compression than gzip.",
      "type": "int",
      "category": "core",
      "group": "Compression",
      "default": "3",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__COMPRESS_ZSTD_LEVEL"
    },
    {
      "key": "CONFIG_PATH_ENV_VAR",
      "title": "Config Path Env Var",
      "description": "Environment variable name for custom configuration file path",
      "details": "Name of the environment variable that can be set to specify a custom configuration file path. Useful when deploying Superset in different environments.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "SUPERSET_CONFIG_PATH",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CONFIG_PATH_ENV_VAR"
    },
    {
      "key": "CONTENT_SECURITY_POLICY_WARNING",
      "title": "Content Security Policy Warning",
      "description": "Enable Content Security Policy warnings",
      "details": "When True, displays warnings about Content Security Policy issues in the browser console. Helpful for debugging CSP-related problems.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CONTENT_SECURITY_POLICY_WARNING"
    },
    {
      "key": "CORS_OPTIONS",
      "title": "Cors Options",
      "description": "Cross-Origin Resource Sharing (CORS) configuration",
      "details": "Dictionary containing CORS settings for the Flask-CORS extension. Defines allowed origins, methods, headers, and other CORS policies. Default includes map tile servers.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{'origins': ['https://tile.openstreetmap.org', 'https://tile.osm.ch']}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CORS_OPTIONS"
    },
    {
      "key": "CSV_DEFAULT_NA_NAMES",
      "title": "Csv Default Na Names",
      "description": "Values treated as None/missing when uploading CSV files",
      "details": "List of string values that should be interpreted as None or missing values during CSV file uploads. Includes common representations like empty strings, 'NULL', 'NaN', etc.",
      "type": "list",
      "category": "core",
      "group": "CSV Upload",
      "default": "['', '-NaN', '1.#QNAN', 'None', 'NA', 'nan', '#NA', 'NULL', '-nan', 'n/a', '1.#IND', 'NaN', '#N/A N/A', '-1.#QNAN', '-1.#IND', '#N/A', 'N/A', '<NA>', 'None']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CSV_DEFAULT_NA_NAMES"
    },
    {
      "key": "CSV_EXPORT",
      "title": "Csv Export",
      "description": "Configuration options for CSV file exports",
      "details": "Dictionary of parameters passed to pandas DataFrame.to_csv() method. Default uses UTF-8 with BOM for better Excel compatibility.",
      "type": "dict",
      "category": "core",
      "group": "CSV Export",
      "default": "{'encoding': 'utf-8-sig'}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CSV_EXPORT"
    },
    {
      "key": "CSV_EXTENSIONS",
      "title": "Csv Extensions",
      "description": "Allowed file extensions for CSV uploads",
      "details": "Set of file extensions that are accepted for CSV file uploads. Typically includes 'csv', 'tsv', and 'txt' extensions.",
      "type": "set",
      "category": "core",
      "group": "CSV Upload",
      "default": "<set with 3 items>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CSV_EXTENSIONS"
    },
    {
      "key": "CSV_TO_HIVE_UPLOAD_DIRECTORY",
      "title": "Csv To Hive Upload Directory",
      "description": "Directory path for CSV to Hive table uploads",
      "details": "Base directory within the S3 bucket where external Hive tables created from CSV files will be stored. Used in conjunction with CSV_TO_HIVE_UPLOAD_S3_BUCKET.",
      "type": "str",
      "category": "core",
      "group": "CSV to Hive",
      "default": "EXTERNAL_HIVE_TABLES/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CSV_TO_HIVE_UPLOAD_DIRECTORY"
    },
    {
      "key": "CSV_TO_HIVE_UPLOAD_DIRECTORY_FUNC",
      "title": "Csv To Hive Upload Directory Func",
      "description": "Function to dynamically generate upload directories for CSV to Hive",
      "details": "Callable that creates upload directory paths based on database, user, and schema. Allows for dynamic organization of external Hive tables by database ID and schema.",
      "type": "Callable",
      "category": "core",
      "group": "CSV to Hive",
      "default": "<function instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__CSV_TO_HIVE_UPLOAD_DIRECTORY_FUNC"
    },
    {
      "key": "CURRENCIES",
      "title": "Currencies",
      "description": "Available currency codes for formatting and display",
      "details": "List of ISO currency codes that can be used in chart formatting and number display. Includes major world currencies like USD, EUR, GBP, etc.",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "['USD', 'EUR', 'GBP', 'INR', 'MXN', 'JPY', 'CNY']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CURRENCIES"
    },
    {
      "key": "CUSTOM_FONT_URLS",
      "title": "Custom Font Urls",
      "description": "External font URLs to load at runtime",
      "details": "List of URLs for external fonts (e.g., Google Fonts) that should be loaded in the browser. Allows customizing typography without rebuilding the application.",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "[]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CUSTOM_FONT_URLS"
    },
    {
      "key": "CUSTOM_SECURITY_MANAGER",
      "title": "Custom Security Manager",
      "description": "Custom Flask-AppBuilder security manager class",
      "details": "Optional custom security manager class to override Flask-AppBuilder's default authentication and authorization behavior. Must inherit from SecurityManager.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CUSTOM_SECURITY_MANAGER"
    },
    {
      "key": "CUSTOM_TEMPLATE_PROCESSORS",
      "title": "Custom Template Processors",
      "description": "Custom template processors by database engine for advanced templating.",
      "details": "A dictionary of macro template processors (by engine) that gets merged into global template processors. The existing template processors get updated with this dictionary, which means the existing keys get overwritten by the content of this dictionary. The customized addons don't necessarily need to use Jinja templating language. This allows you to define custom logic to process templates on a per-engine basis. Example value = {'presto': CustomPrestoTemplateProcessor}",
      "type": "dict",
      "category": "core",
      "group": "Templating",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__CUSTOM_TEMPLATE_PROCESSORS"
    },
    {
      "key": "D3_FORMAT",
      "title": "D3 Format",
      "description": "Override the default D3 locale format for number formatting.",
      "details": "Configures decimal place string, thousands separator, grouping, and currency prefix/suffix for number formatting. Default format: {'decimal': '.', 'thousands': ',', 'grouping': [3], 'currency': ['$', '']}",
      "type": "dict",
      "category": "core",
      "group": "Formatting",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__D3_FORMAT"
    },
    {
      "key": "DASHBOARD_AUTO_REFRESH_INTERVALS",
      "title": "Dashboard Auto Refresh Intervals",
      "description": "List of available auto-refresh intervals for dashboards",
      "details": "Each item is a tuple of [seconds, display_name]. Users can select from these intervals to automatically refresh dashboard data. Set to 0 seconds to disable auto-refresh.",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "[[0, \"Don't refresh\"], [10, '10 seconds'], [30, '30 seconds'], [60, '1 minute'], [300, '5 minutes'], [1800, '30 minutes'], [3600, '1 hour'], [21600, '6 hours'], [43200, '12 hours'], [86400, '24 hours']]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DASHBOARD_AUTO_REFRESH_INTERVALS"
    },
    {
      "key": "DASHBOARD_AUTO_REFRESH_MODE",
      "title": "Dashboard Auto Refresh Mode",
      "description": "Controls dashboard auto-refresh behavior",
      "details": "'force' forces a complete refresh of all chart data, 'fetch' only fetches new data without forcing cache invalidation. Used in conjunction with dashboard auto-refresh intervals.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "force",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DASHBOARD_AUTO_REFRESH_MODE"
    },
    {
      "key": "DASHBOARD_TEMPLATE_ID",
      "title": "Dashboard Template Id",
      "description": "Template dashboard ID for new users",
      "details": "The ID of a template dashboard that should be copied to every new user upon registration. Helps provide new users with a starting dashboard layout and example charts.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DASHBOARD_TEMPLATE_ID"
    },
    {
      "key": "DATASET_HEALTH_CHECK",
      "title": "Dataset Health Check",
      "description": "SQL dataset health check function",
      "details": "A callable function that performs health checks on SQL datasets. Should be memoized for performance using @cache_manager.cache.memoize(timeout=0). Returns a health status string or None if healthy. Used to validate dataset integrity and detect issues.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DATASET_HEALTH_CHECK"
    },
    {
      "key": "DATASET_IMPORT_ALLOWED_DATA_URLS",
      "title": "Dataset Import Allowed Data Urls",
      "description": "Allowed URLs for dataset data imports",
      "details": "List of regular expressions defining allowed URLs for dataset data imports (v1). Controls which external data sources can be imported into Superset. Default \".*\" allows all URLs. Use specific domain patterns for security.",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "['.*']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DATASET_IMPORT_ALLOWED_DATA_URLS"
    },
    {
      "key": "DATA_DIR",
      "title": "Data Dir",
      "description": "Superset data directory path",
      "details": "Directory path where Superset stores its data files and configuration. Defaults to ~/.superset but can be overridden with the SUPERSET_HOME environment variable. Contains database, logs, and other persistent data.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "/Users/max/.superset",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DATA_DIR"
    },
    {
      "key": "DBS_AVAILABLE_DENYLIST",
      "title": "Dbs Available Denylist",
      "description": "Database engines and drivers to exclude",
      "details": "Dictionary mapping database engine names to sets of driver names that should be excluded from the available database connections dropdown. Used to hide specific database drivers from users. Example: {'databricks': {'pyhive', 'pyodbc'}}",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DBS_AVAILABLE_DENYLIST"
    },
    {
      "key": "DB_CONNECTION_MUTATOR",
      "title": "Db Connection Mutator",
      "description": "Database connection parameter modifier",
      "details": "A callable that modifies database connection parameters before establishing connections. Receives URI, params, username, security_manager, and source. Useful for custom authentication logic, connection routing, or adding user-specific connection parameters. Returns modified URI and params.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__DB_CONNECTION_MUTATOR"
    },
    {
      "key": "DB_POLL_INTERVAL_SECONDS",
      "title": "Db Poll Interval Seconds",
      "description": "Custom polling intervals by database engine",
      "details": "Dictionary mapping database engine names to custom polling intervals in seconds. Overrides default polling behavior for specific database engines during query execution. Useful for engines that require different polling frequencies.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DB_POLL_INTERVAL_SECONDS"
    },
    {
      "key": "DB_SQLA_URI_VALIDATOR",
      "title": "Db Sqla Uri Validator",
      "description": "SQLAlchemy URI validation function",
      "details": "A callable that validates database SQLAlchemy URIs before connection. Should raise an exception if the URI is invalid or violates security policies. Used to enforce custom database connection security rules and prevent unauthorized connections.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DB_SQLA_URI_VALIDATOR"
    },
    {
      "key": "DEBUG",
      "title": "Debug",
      "description": "Enable Flask debug mode",
      "details": "When enabled, Flask runs in debug mode with automatic reloading, detailed error pages, and interactive debugger. Should be disabled in production for security.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": true,
      "source": "flask",
      "supports_callable": false,
      "env_var": "SUPERSET__DEBUG"
    },
    {
      "key": "DECKGL_BASE_MAP",
      "title": "Deckgl Base Map",
      "description": "Base map tiles for Deck.gl visualizations",
      "details": "List of base map tiles available for Deck.gl visualizations. Each item is a list of [tile_url, display_name]. Overrides default OpenStreetMap and Mapbox tile options. Supports tile:// URLs for custom tile servers and mapbox:// URLs for Mapbox styles.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DECKGL_BASE_MAP"
    },
    {
      "key": "DEFAULT_DB_ID",
      "title": "Default Db Id",
      "description": "Default database for SQL Lab",
      "details": "The database ID to select by default in SQL Lab. When set, this database will be pre-selected when users open SQL Lab, improving user experience for single-database deployments or when users primarily work with one database.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DEFAULT_DB_ID"
    },
    {
      "key": "DEFAULT_FEATURE_FLAGS",
      "title": "Default Feature Flags",
      "description": "Default feature flags that are set by default and can be overwritten by FEATURE_FLAGS",
      "details": "Dictionary containing the default values for all feature flags in Superset. These values can be overwritten by those specified under FEATURE_FLAGS in superset_config.py. Can also be set via 'SUPERSET_FEATURE_' prefixed environment variables. Example: DEFAULT_FEATURE_FLAGS = { 'FOO': True, 'BAR': False } here and FEATURE_FLAGS = { 'BAR': True, 'BAZ': True } in superset_config.py will result in combined feature flags of { 'FOO': True, 'BAR': True, 'BAZ': True }",
      "type": "dict",
      "category": "core",
      "group": "Feature flags",
      "default": "{'DRUID_JOINS': False, 'DYNAMIC_PLUGINS': False, 'ENABLE_TEMPLATE_PROCESSING': False, 'ENABLE_JAVASCRIPT_CONTROLS': False, 'PRESTO_EXPAND_DATA': False, 'THUMBNAILS': False, 'ENABLE_DASHBOARD_SCREENSHOT_ENDPOINTS': False, 'ENABLE_DASHBOARD_DOWNLOAD_WEBDRIVER_SCREENSHOT': False, 'TAGGING_SYSTEM': False, 'SQLLAB_BACKEND_PERSISTENCE': True, 'LISTVIEWS_DEFAULT_CARD_VIEW': False, 'ESCAPE_MARKDOWN_HTML': False, 'DASHBOARD_VIRTUALIZATION': True, 'GLOBAL_ASYNC_QUERIES': False, 'EMBEDDED_SUPERSET': False, 'ALERT_REPORTS': False, 'ALERT_REPORT_TABS': False, 'ALERT_REPORT_SLACK_V2': False, 'DASHBOARD_RBAC': False, 'ENABLE_ADVANCED_DATA_TYPES': False, 'ALERTS_ATTACH_REPORTS': True, 'ALLOW_FULL_CSV_EXPORT': False, 'ALLOW_ADHOC_SUBQUERY': False, 'USE_ANALOGOUS_COLORS': False, 'RLS_IN_SQLLAB': False, 'OPTIMIZE_SQL': False, 'IMPERSONATE_WITH_EMAIL_PREFIX': False, 'CACHE_IMPERSONATION': False, 'CACHE_QUERY_BY_USER': False, 'EMBEDDABLE_CHARTS': True, 'DRILL_TO_DETAIL': True, 'DRILL_BY': True, 'DATAPANEL_CLOSED_BY_DEFAULT': False, 'FILTERBAR_CLOSED_BY_DEFAULT': False, 'ESTIMATE_QUERY_COST': False, 'SSH_TUNNELING': False, 'AVOID_COLORS_COLLISION': True, 'MENU_HIDE_USER_INFO': False, 'ENABLE_SUPERSET_META_DB': False, 'PLAYWRIGHT_REPORTS_AND_THUMBNAILS': False, 'CHART_PLUGINS_EXPERIMENTAL': False, 'SQLLAB_FORCE_RUN_ASYNC': False, 'ENABLE_FACTORY_RESET_COMMAND': False, 'SLACK_ENABLE_AVATARS': False, 'CSS_TEMPLATES': True, 'DATE_FORMAT_IN_EMAIL_SUBJECT': False, 'DATASET_FOLDERS': False, 'AG_GRID_TABLE_ENABLED': False, 'TABLE_V2_TIME_COMPARISON_ENABLED': False}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DEFAULT_FEATURE_FLAGS"
    },
    {
      "key": "DEFAULT_HTTP_HEADERS",
      "title": "Default Http Headers",
      "description": "Default HTTP headers for server responses",
      "details": "Dictionary of default HTTP headers to be served by the Superset server. These headers can be overridden within the application using OVERRIDE_HTTP_HEADERS. Works alongside Flask-Talisman security headers to provide additional response headers.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DEFAULT_HTTP_HEADERS"
    },
    {
      "key": "DEFAULT_MODULE_DS_MAP",
      "title": "Default Module Ds Map",
      "description": "Default datasource modules and classes",
      "details": "Ordered dictionary mapping module paths to datasource classes that should be registered with Superset. Defines which datasource types are available for connecting to data. Additional datasources can be added via ADDITIONAL_MODULE_DS_MAP.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{'superset.connectors.sqla.models': ['SqlaTable']}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DEFAULT_MODULE_DS_MAP"
    },
    {
      "key": "DEFAULT_RELATIVE_END_TIME",
      "title": "Default Relative End Time",
      "description": "Default end time for relative time filters",
      "details": "Default end time for relative time filters. When both start and end are set to 'today', creates a moving time window. When only end time is set to 'now', start time defaults to midnight. Common values include 'today', 'now', or specific date formats.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "today",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DEFAULT_RELATIVE_END_TIME"
    },
    {
      "key": "DEFAULT_RELATIVE_START_TIME",
      "title": "Default Relative Start Time",
      "description": "Default start time for relative time filters",
      "details": "Default start time for relative time filters. When set to 'today', start time begins at midnight. Works with DEFAULT_RELATIVE_END_TIME to define default time filter behavior in charts and dashboards.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "today",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DEFAULT_RELATIVE_START_TIME"
    },
    {
      "key": "DEFAULT_SQLLAB_LIMIT",
      "title": "Default Sqllab Limit",
      "description": "Default row limit for SQL Lab queries",
      "details": "Default row limit for SQL Lab queries. Users can override this limit in the SQL Lab UI. Helps prevent accidentally running queries that return massive result sets which could cause browser performance issues.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "1000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DEFAULT_SQLLAB_LIMIT"
    },
    {
      "key": "DEFAULT_TIME_FILTER",
      "title": "Default Time Filter",
      "description": "Default time filter in chart explorer",
      "details": "Default time filter applied in the chart explorer. Can be 'No filter', 'Last day', 'Last week', or ISO date ranges like '<date> : now'. Controls the initial time range selection when creating new charts.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "No filter",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DEFAULT_TIME_FILTER"
    },
    {
      "key": "DEFAULT_VIZ_TYPE",
      "title": "Default Viz Type",
      "description": "Default visualization type for new charts",
      "details": "Default visualization type used in the chart explorer and SQL Lab explore. Common options include 'table', 'bar', 'line', 'pie'. Determines the initial chart type when creating new visualizations from datasets or SQL queries.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "table",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DEFAULT_VIZ_TYPE"
    },
    {
      "key": "DISALLOWED_SQL_FUNCTIONS",
      "title": "Disallowed Sql Functions",
      "description": "A set of disallowed SQL functions per engine to restrict unsafe SQL functions in SQL Lab and Charts.",
      "details": "The keys of the dictionary are the engine names, and the values are sets of disallowed functions. This is used to restrict the use of unsafe SQL functions that could reveal sensitive information or perform dangerous operations. Each engine can have its own set of restricted functions.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "<dict with 5 items>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DISALLOWED_SQL_FUNCTIONS"
    },
    {
      "key": "DISPLAY_MAX_ROW",
      "title": "Display Max Row",
      "description": "Maximum number of rows displayed in SQL Lab UI.",
      "details": "Is set to avoid out of memory/localstorage issues in browsers. Does not affect exported CSVs. This limit only applies to what is shown in the browser interface, not to actual query results or exports.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "10000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DISPLAY_MAX_ROW"
    },
    {
      "key": "DOCUMENTATION_ICON",
      "title": "Documentation Icon",
      "description": "Icon for documentation link in the interface",
      "details": "Recommended size: 16x16. Used alongside DOCUMENTATION_URL and DOCUMENTATION_TEXT to provide users with a link to documentation.",
      "type": "None",
      "category": "core",
      "group": "Documentation Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DOCUMENTATION_ICON"
    },
    {
      "key": "DOCUMENTATION_TEXT",
      "title": "Documentation Text",
      "description": "Text label for documentation link in the interface",
      "details": "Used alongside DOCUMENTATION_URL and DOCUMENTATION_ICON to provide users with a link to documentation.",
      "type": "str",
      "category": "core",
      "group": "Documentation Configuration",
      "default": "Documentation",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DOCUMENTATION_TEXT"
    },
    {
      "key": "DOCUMENTATION_URL",
      "title": "Documentation Url",
      "description": "URL for documentation link in the interface",
      "details": "When set, creates a link where users can read more about Superset. Used alongside DOCUMENTATION_TEXT and DOCUMENTATION_ICON.",
      "type": "None",
      "category": "core",
      "group": "Documentation Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__DOCUMENTATION_URL"
    },
    {
      "key": "EMAIL_HEADER_MUTATOR",
      "title": "Email Header Mutator",
      "description": "Function to add header data to outgoing emails",
      "details": "Allows customization of email headers, metadata, title, or sender specifications for all outgoing emails from Superset. Function receives a MIMEMultipart message object and keyword arguments.",
      "type": "Callable",
      "category": "core",
      "group": "",
      "default": "<function instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__EMAIL_HEADER_MUTATOR"
    },
    {
      "key": "EMAIL_PAGE_RENDER_WAIT",
      "title": "Email Page Render Wait",
      "description": "Wait time for page rendering in email reports",
      "details": "Maximum time in seconds to wait for a page to fully render before capturing it for email reports. Prevents timeouts on slow-loading dashboards.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "30",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EMAIL_PAGE_RENDER_WAIT"
    },
    {
      "key": "EMAIL_REPORTS_CTA",
      "title": "Email Reports Cta",
      "description": "Call-to-action text in email reports",
      "details": "The text displayed on the button or link in email reports that directs recipients back to the Superset interface to explore the data further.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "Explore in Superset",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EMAIL_REPORTS_CTA"
    },
    {
      "key": "EMAIL_REPORTS_SUBJECT_PREFIX",
      "title": "Email Reports Subject Prefix",
      "description": "Prefix for email report subject lines",
      "details": "Text prefix automatically added to the subject line of all automated email reports to help recipients identify Superset emails.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "[Report] ",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EMAIL_REPORTS_SUBJECT_PREFIX"
    },
    {
      "key": "ENABLE_CHUNK_ENCODING",
      "title": "Enable Chunk Encoding",
      "description": "Enable HTTP chunk encoding for responses",
      "details": "When enabled, allows HTTP responses to be sent in chunks, which can improve performance for large data transfers.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ENABLE_CHUNK_ENCODING"
    },
    {
      "key": "ENABLE_CORS",
      "title": "Enable Cors",
      "description": "Enable Cross-Origin Resource Sharing (CORS) support",
      "details": "Requires installing cors-related dependencies. Configure allowed origins through CORS_OPTIONS. Used to allow web applications from different domains to access Superset APIs.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ENABLE_CORS"
    },
    {
      "key": "ENABLE_PROXY_FIX",
      "title": "Enable Proxy Fix",
      "description": "Enable proxy fix middleware for handling X-Forwarded headers",
      "details": "When enabled, uses X-Forwarded headers for correct URL generation behind proxies. Configure specific headers through PROXY_FIX_CONFIG. More secure to disable in production unless needed.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ENABLE_PROXY_FIX"
    },
    {
      "key": "ENABLE_TIME_ROTATE",
      "title": "Enable Time Rotate",
      "description": "Enable time-based log file rotation",
      "details": "When enabled, log files are rotated based on time intervals rather than file size. Works in conjunction with BACKUP_COUNT to manage log retention.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ENABLE_TIME_ROTATE"
    },
    {
      "key": "ENGINE_CONTEXT_MANAGER",
      "title": "Engine Context Manager",
      "description": "Context manager for database engine connections",
      "details": "Function that provides a context manager for managing database engine connections and transactions. Used to ensure proper connection handling and cleanup.",
      "type": "Callable",
      "category": "core",
      "group": "",
      "default": "<function instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__ENGINE_CONTEXT_MANAGER"
    },
    {
      "key": "ENVIRONMENT_TAG_CONFIG",
      "title": "Environment Tag Config",
      "description": "Configuration for environment tag shown in the navbar",
      "details": "Displays environment information in the UI. Configure 'variable' for environment variable name and 'values' for different environment settings. Set 'text' to empty string to hide the tag.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{'variable': 'SUPERSET_ENV', 'values': {'debug': {'color': 'error.base', 'text': 'flask-debug'}, 'development': {'color': 'error.base', 'text': 'Development'}, 'production': {'color': '', 'text': ''}}}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ENVIRONMENT_TAG_CONFIG"
    },
    {
      "key": "EVENT_LOGGER",
      "title": "Event Logger",
      "description": "Event logging system for tracking user activities and system events",
      "details": "Used to log various events in Superset such as chart views, dashboard access, and other user interactions. Can be customized to use different logging backends.",
      "type": "Callable",
      "category": "core",
      "group": "",
      "default": "<DBEventLogger instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__EVENT_LOGGER"
    },
    {
      "key": "EXCEL_EXPORT",
      "title": "Excel Export",
      "description": "Configuration options for Excel file exports",
      "details": "Dictionary containing settings for Excel export functionality, such as formatting options, sheet names, and export parameters.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EXCEL_EXPORT"
    },
    {
      "key": "EXCEL_EXTENSIONS",
      "title": "Excel Extensions",
      "description": "Set of allowed Excel file extensions for uploads",
      "details": "File extensions that are permitted when uploading Excel files to Superset. Typically includes '.xls' and '.xlsx' formats.",
      "type": "set",
      "category": "core",
      "group": "",
      "default": "<set with 2 items>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EXCEL_EXTENSIONS"
    },
    {
      "key": "EXCLUDE_USERS_FROM_LISTS",
      "title": "Exclude Users From Lists",
      "description": "Function to exclude certain users from user lists",
      "details": "When set, this function is called to filter users from various user selection lists in the interface. Useful for hiding system or service accounts.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EXCLUDE_USERS_FROM_LISTS"
    },
    {
      "key": "EXPLAIN_TEMPLATE_LOADING",
      "title": "Explain Template Loading",
      "description": "Enable template loading debug information",
      "details": "When enabled, provides detailed information about template loading process for debugging purposes. Useful for troubleshooting Jinja2 template issues.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EXPLAIN_TEMPLATE_LOADING"
    },
    {
      "key": "EXPLORE_FORM_DATA_CACHE_CONFIG",
      "title": "Explore Form Data Cache Config",
      "description": "Cache configuration for explore form data",
      "details": "Caching configuration specifically for storing explore form data, including chart configurations and user selections. Improves performance when navigating between chart types.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "<dict with 5 items>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EXPLORE_FORM_DATA_CACHE_CONFIG"
    },
    {
      "key": "EXTRA_CATEGORICAL_COLOR_SCHEMES",
      "title": "Extra Categorical Color Schemes",
      "description": "Additional categorical color schemes for visualizations",
      "details": "List of custom categorical color schemes. Each scheme should have 'id', 'description', and 'colors' properties for use in charts and dashboards.",
      "type": "list",
      "category": "core",
      "group": "Color Schemes",
      "default": "[]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EXTRA_CATEGORICAL_COLOR_SCHEMES"
    },
    {
      "key": "EXTRA_DYNAMIC_QUERY_FILTERS",
      "title": "Extra Dynamic Query Filters",
      "description": "Dynamic query filters for programmatic data access control",
      "details": "Dictionary of functions that dynamically filter queries based on runtime conditions. Keys represent filter types (e.g., 'databases') and values are callable functions that modify SQLAlchemy queries.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EXTRA_DYNAMIC_QUERY_FILTERS"
    },
    {
      "key": "EXTRA_RELATED_QUERY_FILTERS",
      "title": "Extra Related Query Filters",
      "description": "Additional query filters for related data access",
      "details": "Dictionary of filter functions applied to related queries in the system. Used to restrict access to related entities based on custom business logic.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EXTRA_RELATED_QUERY_FILTERS"
    },
    {
      "key": "EXTRA_SEQUENTIAL_COLOR_SCHEMES",
      "title": "Extra Sequential Color Schemes",
      "description": "Additional sequential color schemes for visualizations",
      "details": "List of custom sequential color schemes for heatmaps and other sequential visualizations. Each scheme should have 'id', 'description', and 'colors' properties.",
      "type": "list",
      "category": "core",
      "group": "Color Schemes",
      "default": "[]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__EXTRA_SEQUENTIAL_COLOR_SCHEMES"
    },
    {
      "key": "FAB_ADD_SECURITY_API",
      "title": "Fab Add Security Api",
      "description": "Enable Flask-AppBuilder security API endpoints",
      "details": "When enabled, Flask-AppBuilder automatically adds REST API endpoints for managing users, roles, and permissions. Required for programmatic user management.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_ADD_SECURITY_API"
    },
    {
      "key": "FAB_ADD_SECURITY_PERMISSION_VIEW",
      "title": "Fab Add Security Permission View",
      "description": "Enables creation of permission views in Flask-AppBuilder security system",
      "details": "Controls whether Flask-AppBuilder automatically creates permission views for managing security permissions. When enabled, provides UI interfaces for permission management in the admin interface.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_ADD_SECURITY_PERMISSION_VIEW"
    },
    {
      "key": "FAB_ADD_SECURITY_PERMISSION_VIEWS_VIEW",
      "title": "Fab Add Security Permission Views View",
      "description": "Enables permission views management interface in Flask-AppBuilder",
      "details": "Controls whether Flask-AppBuilder creates administrative views for managing permission view relationships. This provides UI tools for administrators to configure which permissions are associated with specific views.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_ADD_SECURITY_PERMISSION_VIEWS_VIEW"
    },
    {
      "key": "FAB_ADD_SECURITY_VIEWS",
      "title": "Fab Add Security Views",
      "description": "Enables Flask-AppBuilder security management views",
      "details": "Controls whether Flask-AppBuilder automatically creates security-related administrative views (users, roles, permissions). When enabled, provides the standard security management interface in the admin section.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_ADD_SECURITY_VIEWS"
    },
    {
      "key": "FAB_ADD_SECURITY_VIEW_MENU_VIEW",
      "title": "Fab Add Security View Menu View",
      "description": "Enables view-menu relationship management in Flask-AppBuilder security",
      "details": "Controls whether Flask-AppBuilder creates administrative interfaces for managing the relationships between views and menu items in the security system. This allows fine-grained control over menu visibility based on permissions.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_ADD_SECURITY_VIEW_MENU_VIEW"
    },
    {
      "key": "FAB_API_MAX_PAGE_SIZE",
      "title": "Fab Api Max Page Size",
      "description": "Maximum number of items returned per page in Flask-AppBuilder API responses",
      "details": "Sets the upper limit for pagination in Flask-AppBuilder's REST API endpoints. This prevents excessive memory usage and ensures reasonable response times by limiting how many records can be requested in a single API call.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "100",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_API_MAX_PAGE_SIZE"
    },
    {
      "key": "FAB_API_SWAGGER_UI",
      "title": "Fab Api Swagger Ui",
      "description": "Enables Swagger UI interface for Flask-AppBuilder API documentation",
      "details": "Controls whether Flask-AppBuilder exposes a Swagger UI interface for exploring and testing the REST API endpoints. When enabled, provides an interactive documentation interface typically available at /swagger.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_API_SWAGGER_UI"
    },
    {
      "key": "FAB_BASE_TEMPLATE",
      "title": "Fab Base Template",
      "description": "Base template file for Flask-AppBuilder pages",
      "details": "Specifies the Jinja2 template file that serves as the base layout for Flask-AppBuilder generated pages. This template defines the overall structure, navigation, and styling that other templates extend from.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "appbuilder/baselayout.html",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_BASE_TEMPLATE"
    },
    {
      "key": "FAB_STATIC_FOLDER",
      "title": "Fab Static Folder",
      "description": "Directory path for Flask-AppBuilder static files",
      "details": "Specifies the filesystem path where Flask-AppBuilder static assets (CSS, JavaScript, images) are stored. This path is relative to the application root and contains the UI resources needed for the admin interface.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "static/appbuilder",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_STATIC_FOLDER"
    },
    {
      "key": "FAB_STATIC_URL_PATH",
      "title": "Fab Static Url Path",
      "description": "URL path for serving Flask-AppBuilder static files",
      "details": "Defines the URL prefix used to serve Flask-AppBuilder static assets in web requests. This path is used in templates and responses to reference CSS, JavaScript, and image files needed for the admin interface.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "/appbuilder",
      "external": true,
      "source": "flask-appbuilder",
      "supports_callable": false,
      "env_var": "SUPERSET__FAB_STATIC_URL_PATH"
    },
    {
      "key": "FEATURE_FLAGS",
      "title": "Feature Flags",
      "description": "Custom feature flags that override or extend DEFAULT_FEATURE_FLAGS",
      "details": "Dictionary for custom feature flags that are merged with DEFAULT_FEATURE_FLAGS. This is where administrators can enable/disable specific features in their superset_config.py file. These flags control experimental features, UI behavior, and functionality availability across the application.",
      "type": "dict",
      "category": "core",
      "group": "Feature flags",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__FEATURE_FLAGS"
    },
    {
      "key": "FILENAME",
      "title": "Filename",
      "description": "Default log file path for Superset application",
      "details": "Specifies the filesystem path where Superset writes its log files. This configuration determines where application logs, errors, and debug information are stored for monitoring and troubleshooting purposes.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "/Users/max/.superset/superset.log",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__FILENAME"
    },
    {
      "key": "FILTER_SELECT_ROW_LIMIT",
      "title": "Filter Select Row Limit",
      "description": "Maximum rows retrieved for filter dropdown auto-completion",
      "details": "Limits the number of distinct values retrieved from the database when populating filter dropdown menus with auto-complete functionality. This prevents performance issues when dealing with columns that have many unique values.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "10000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__FILTER_SELECT_ROW_LIMIT"
    },
    {
      "key": "FILTER_STATE_CACHE_CONFIG",
      "title": "Filter State Cache Config",
      "description": "Cache configuration for storing filter states",
      "details": "Configures the caching backend used to store dashboard and chart filter states. Uses SupersetMetastoreCache by default with a 90-day timeout. This cache is essential for persisting filter values and enabling features like permalink sharing and dashboard state restoration.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "<dict with 5 items>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__FILTER_STATE_CACHE_CONFIG"
    },
    {
      "key": "FLASK_APP_MUTATOR",
      "title": "Flask App Mutator",
      "description": "Function to modify Flask app during startup",
      "details": "Callable that receives a reference to the Flask app at startup and can be used to alter the Flask app configuration, register blueprints, or make other modifications.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__FLASK_APP_MUTATOR"
    },
    {
      "key": "FLASK_USE_RELOAD",
      "title": "Flask Use Reload",
      "description": "Enable Flask development server auto-reload",
      "details": "When enabled, the Flask development server will automatically restart when code changes are detected. Useful during development.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__FLASK_USE_RELOAD"
    },
    {
      "key": "GET_FEATURE_FLAGS_FUNC",
      "title": "Get Feature Flags Func",
      "description": "Function to dynamically modify feature flags at runtime",
      "details": "Callable that receives a dict of all feature flags (DEFAULT_FEATURE_FLAGS merged with FEATURE_FLAGS), can alter it, and returns a similar dict. Can be used to implement progressive rollouts, role-based features, or A/B testing framework. Example: def GET_FEATURE_FLAGS_FUNC(feature_flags_dict): if hasattr(g, 'user') and g.user.is_active: feature_flags_dict['some_feature'] = g.user.get_id() == 5; return feature_flags_dict",
      "type": "None",
      "category": "core",
      "group": "Feature flags",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__GET_FEATURE_FLAGS_FUNC"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_CACHE_BACKEND",
      "title": "Global Async Queries Cache Backend",
      "description": "Cache backend configuration for async queries",
      "details": "Configure cache backend for async query results. Supports 'RedisCache' and 'RedisSentinelCache' types with corresponding connection settings for Redis hosts, ports, authentication, and SSL options.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{'CACHE_TYPE': 'RedisCache', 'CACHE_REDIS_HOST': 'localhost', 'CACHE_REDIS_PORT': 6379, 'CACHE_REDIS_USER': '', 'CACHE_REDIS_PASSWORD': '', 'CACHE_REDIS_DB': 0, 'CACHE_DEFAULT_TIMEOUT': 300, 'CACHE_REDIS_SENTINELS': [['localhost', 26379]], 'CACHE_REDIS_SENTINEL_MASTER': 'mymaster', 'CACHE_REDIS_SENTINEL_PASSWORD': None, 'CACHE_REDIS_SSL': False, 'CACHE_REDIS_SSL_CERTFILE': None, 'CACHE_REDIS_SSL_KEYFILE': None, 'CACHE_REDIS_SSL_CERT_REQS': 'required', 'CACHE_REDIS_SSL_CA_CERTS': None}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_CACHE_BACKEND"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_JWT_COOKIE_DOMAIN",
      "title": "Global Async Queries Jwt Cookie Domain",
      "description": "Domain for global async queries JWT cookies",
      "details": "Sets the domain attribute for JWT cookies used in global async queries. When set to None, the cookie will be valid for the current domain only. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "None",
      "category": "core",
      "group": "Global Async Queries",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_JWT_COOKIE_DOMAIN"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_JWT_COOKIE_NAME",
      "title": "Global Async Queries Jwt Cookie Name",
      "description": "Name of the JWT cookie for global async queries",
      "details": "Specifies the name of the HTTP cookie that will store the JWT token for authenticating global async query requests. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "str",
      "category": "core",
      "group": "Global Async Queries",
      "default": "async-token",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_JWT_COOKIE_NAME"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_JWT_COOKIE_SAMESITE",
      "title": "Global Async Queries Jwt Cookie Samesite",
      "description": "SameSite attribute for global async queries JWT cookies",
      "details": "Controls the SameSite attribute of JWT cookies for global async queries. Can be 'None', 'Lax', or 'Strict'. When None, the browser default is used. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "None",
      "category": "core",
      "group": "Global Async Queries",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_JWT_COOKIE_SAMESITE"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_JWT_COOKIE_SECURE",
      "title": "Global Async Queries Jwt Cookie Secure",
      "description": "Secure flag for global async queries JWT cookies",
      "details": "When True, JWT cookies for global async queries will only be sent over HTTPS connections. Set to True in production environments. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "bool",
      "category": "core",
      "group": "Global Async Queries",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_JWT_COOKIE_SECURE"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_JWT_SECRET",
      "title": "Global Async Queries Jwt Secret",
      "description": "Secret key for signing global async queries JWT tokens",
      "details": "Secret key used to sign and verify JWT tokens for global async queries. Must be changed from the default value in production environments. Keep this value secure and consistent across all Superset instances. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "str",
      "category": "core",
      "group": "Global Async Queries",
      "default": "test-secret-change-me",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_JWT_SECRET"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_POLLING_DELAY",
      "title": "Global Async Queries Polling Delay",
      "description": "Polling delay for global async queries in milliseconds",
      "details": "Time interval in milliseconds between polling requests when using the 'polling' transport for global async queries. Lower values provide faster updates but increase server load. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "int",
      "category": "core",
      "group": "Global Async Queries",
      "default": "500",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_POLLING_DELAY"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_REDIS_STREAM_LIMIT",
      "title": "Global Async Queries Redis Stream Limit",
      "description": "Maximum entries in Redis stream for global async queries",
      "details": "Maximum number of entries to keep in the Redis stream for global async query events. Older entries are automatically trimmed when this limit is exceeded. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "int",
      "category": "core",
      "group": "Global Async Queries",
      "default": "1000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_REDIS_STREAM_LIMIT"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_REDIS_STREAM_LIMIT_FIREHOSE",
      "title": "Global Async Queries Redis Stream Limit Firehose",
      "description": "Maximum entries in Redis firehose stream for global async queries",
      "details": "Maximum number of entries to keep in the Redis firehose stream for high-volume global async query events. This is typically much larger than the regular stream limit to handle bulk operations. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "int",
      "category": "core",
      "group": "Global Async Queries",
      "default": "1000000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_REDIS_STREAM_LIMIT_FIREHOSE"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_REDIS_STREAM_PREFIX",
      "title": "Global Async Queries Redis Stream Prefix",
      "description": "Redis stream key prefix for global async queries",
      "details": "Prefix for Redis stream keys used to store global async query events. Allows multiple Superset instances to use the same Redis instance without key conflicts. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "str",
      "category": "core",
      "group": "Global Async Queries",
      "default": "async-events-",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_REDIS_STREAM_PREFIX"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_REGISTER_REQUEST_HANDLERS",
      "title": "Global Async Queries Register Request Handlers",
      "description": "Enable registration of global async query request handlers",
      "details": "When True, automatically registers the necessary Flask request handlers for global async queries. Set to False if you want to manually register handlers or disable this functionality. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "bool",
      "category": "core",
      "group": "Global Async Queries",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_REGISTER_REQUEST_HANDLERS"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_TRANSPORT",
      "title": "Global Async Queries Transport",
      "description": "Transport method for global async queries",
      "details": "Specifies the transport mechanism for global async queries. Options are 'polling' (HTTP long polling) or 'ws' (WebSocket). Polling is more compatible but WebSocket provides better real-time performance. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "str",
      "category": "core",
      "group": "Global Async Queries",
      "default": "polling",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_TRANSPORT"
    },
    {
      "key": "GLOBAL_ASYNC_QUERIES_WEBSOCKET_URL",
      "title": "Global Async Queries Websocket Url",
      "description": "WebSocket URL for global async queries",
      "details": "WebSocket server URL used when GLOBAL_ASYNC_QUERIES_TRANSPORT is set to 'ws'. Should point to your WebSocket server endpoint. Use 'wss://' for secure connections in production. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "str",
      "category": "core",
      "group": "Global Async Queries",
      "default": "ws://127.0.0.1:8080/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERIES_WEBSOCKET_URL"
    },
    {
      "key": "GLOBAL_ASYNC_QUERY_MANAGER_CLASS",
      "title": "Global Async Query Manager Class",
      "description": "Manager class for global async queries",
      "details": "Fully qualified class name for the async query manager that handles global async query operations. The default implementation provides Redis-based event streaming. Can be customized to implement different backends or behaviors. Requires GLOBAL_ASYNC_QUERIES feature flag to be enabled.",
      "type": "str",
      "category": "core",
      "group": "Global Async Queries",
      "default": "superset.async_events.async_query_manager.AsyncQueryManager",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GLOBAL_ASYNC_QUERY_MANAGER_CLASS"
    },
    {
      "key": "GUEST_ROLE_NAME",
      "title": "Guest Role Name",
      "description": "Role name for guest users in embedded mode",
      "details": "Name of the role assigned to guest users when accessing Superset in embedded mode. This role should be configured with appropriate permissions for the resources that embedded users should access.",
      "type": "str",
      "category": "core",
      "group": "Embedded Configuration",
      "default": "Public",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GUEST_ROLE_NAME"
    },
    {
      "key": "GUEST_TOKEN_HEADER_NAME",
      "title": "Guest Token Header Name",
      "description": "HTTP header name for guest tokens",
      "details": "Name of the HTTP header that contains the guest token for embedded mode authentication. The embedded application should send the guest JWT token in this header when making requests to Superset.",
      "type": "str",
      "category": "core",
      "group": "Embedded Configuration",
      "default": "X-GuestToken",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GUEST_TOKEN_HEADER_NAME"
    },
    {
      "key": "GUEST_TOKEN_JWT_ALGO",
      "title": "Guest Token Jwt Algo",
      "description": "JWT algorithm for guest tokens",
      "details": "Cryptographic algorithm used to sign and verify guest JWT tokens. HS256 (HMAC with SHA-256) is the default symmetric algorithm. Other supported algorithms include RS256 for asymmetric signing.",
      "type": "str",
      "category": "core",
      "group": "Embedded Configuration",
      "default": "HS256",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GUEST_TOKEN_JWT_ALGO"
    },
    {
      "key": "GUEST_TOKEN_JWT_AUDIENCE",
      "title": "Guest Token Jwt Audience",
      "description": "JWT audience claim for guest tokens",
      "details": "Audience (aud) claim for guest JWT tokens used in embedded mode. Can be a string or callable that returns a string. When None, defaults to WEBDRIVER_BASEURL. The token's audience must match this value for validation to succeed.",
      "type": "None",
      "category": "core",
      "group": "Embedded Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GUEST_TOKEN_JWT_AUDIENCE"
    },
    {
      "key": "GUEST_TOKEN_JWT_EXP_SECONDS",
      "title": "Guest Token Jwt Exp Seconds",
      "description": "Expiration time for guest JWT tokens in seconds",
      "details": "Time in seconds after which guest JWT tokens expire. Default is 300 seconds (5 minutes). Shorter expiration times provide better security but require more frequent token renewal by the embedding application.",
      "type": "int",
      "category": "core",
      "group": "Embedded Configuration",
      "default": "300",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GUEST_TOKEN_JWT_EXP_SECONDS"
    },
    {
      "key": "GUEST_TOKEN_JWT_SECRET",
      "title": "Guest Token Jwt Secret",
      "description": "Secret key for signing guest JWT tokens",
      "details": "Secret key used to sign and verify guest JWT tokens for embedded mode. Must be changed from the default value in production. This key should be shared between Superset and the embedding application to generate valid tokens.",
      "type": "str",
      "category": "core",
      "group": "Embedded Configuration",
      "default": "test-guest-secret-change-me",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GUEST_TOKEN_JWT_SECRET"
    },
    {
      "key": "GUEST_TOKEN_VALIDATOR_HOOK",
      "title": "Guest Token Validator Hook",
      "description": "Custom validation hook for guest tokens",
      "details": "Optional callable for performing additional validation of guest token configuration. Takes a GuestTokenUser dict as argument and should return False to reject the token with HTTP 400. Useful for validating RLS parameters or other custom requirements.",
      "type": "None",
      "category": "core",
      "group": "Embedded Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__GUEST_TOKEN_VALIDATOR_HOOK"
    },
    {
      "key": "HTML_SANITIZATION",
      "title": "Html Sanitization",
      "description": "Enable HTML sanitization in markdown components",
      "details": "When True, sanitizes HTML content used in markdown components to prevent XSS attacks. Uses the GitHub sanitization schema by default. Disabling this option is not recommended for security reasons. Use HTML_SANITIZATION_SCHEMA_EXTENSIONS to allow additional safe elements.",
      "type": "bool",
      "category": "core",
      "group": "Security",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__HTML_SANITIZATION"
    },
    {
      "key": "HTML_SANITIZATION_SCHEMA_EXTENSIONS",
      "title": "Html Sanitization Schema Extensions",
      "description": "Extensions to HTML sanitization schema",
      "details": "Dictionary extending the default HTML sanitization schema to allow additional safe HTML elements, attributes, and protocols. Use carefully to avoid introducing XSS vulnerabilities. Can specify allowed attributes for elements and protocols for href attributes.",
      "type": "dict",
      "category": "core",
      "group": "Security",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__HTML_SANITIZATION_SCHEMA_EXTENSIONS"
    },
    {
      "key": "HTTP_HEADERS",
      "title": "Http Headers",
      "description": "Additional static HTTP headers",
      "details": "Dictionary of additional static HTTP headers to be served by your Superset server. Note that Flask-Talisman applies relevant security HTTP headers automatically. Use DEFAULT_HTTP_HEADERS for default values and OVERRIDE_HTTP_HEADERS for values that override app settings.",
      "type": "dict",
      "category": "core",
      "group": "HTTP Configuration",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__HTTP_HEADERS"
    },
    {
      "key": "INTERVAL",
      "title": "Interval",
      "description": "Generic interval configuration in seconds",
      "details": "A general-purpose interval setting used by various background processes or periodic operations. The specific usage depends on the component that references this configuration. Commonly used for polling, refresh rates, or scheduling intervals.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "1",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__INTERVAL"
    },
    {
      "key": "IS_FEATURE_ENABLED_FUNC",
      "title": "Is Feature Enabled Func",
      "description": "Function to check if a feature flag is enabled",
      "details": "Callable that takes a feature flag name and optional default value, returning True if the feature is enabled. Provides an alternative to GET_FEATURE_FLAGS_FUNC for evaluating individual feature flags without loading all flags. Do not use both functions together.",
      "type": "None",
      "category": "core",
      "group": "Feature Flags",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__IS_FEATURE_ENABLED_FUNC"
    },
    {
      "key": "JINJA_CONTEXT_ADDONS",
      "title": "Jinja Context Addons",
      "description": "Additional items for SQL Lab Jinja context",
      "details": "Dictionary of items merged into the Jinja context for SQL Lab templates. Values override existing context keys. Only expose simple, pure functions that return native types to avoid security risks, as this opens a window for executing untrusted code.",
      "type": "dict",
      "category": "core",
      "group": "SQL Lab",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JINJA_CONTEXT_ADDONS"
    },
    {
      "key": "JWT_ACCESS_COOKIE_NAME",
      "title": "Jwt Access Cookie Name",
      "description": "Name of the cookie that contains the access JWT token",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "access_token_cookie",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ACCESS_COOKIE_NAME"
    },
    {
      "key": "JWT_ACCESS_COOKIE_PATH",
      "title": "Jwt Access Cookie Path",
      "description": "Path restriction for the access token cookie",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ACCESS_COOKIE_PATH"
    },
    {
      "key": "JWT_ACCESS_CSRF_COOKIE_NAME",
      "title": "Jwt Access Csrf Cookie Name",
      "description": "Name of the cookie that contains the CSRF token for access tokens",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "csrf_access_token",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ACCESS_CSRF_COOKIE_NAME"
    },
    {
      "key": "JWT_ACCESS_CSRF_COOKIE_PATH",
      "title": "Jwt Access Csrf Cookie Path",
      "description": "Path restriction for the CSRF access token cookie",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ACCESS_CSRF_COOKIE_PATH"
    },
    {
      "key": "JWT_ACCESS_CSRF_FIELD_NAME",
      "title": "Jwt Access Csrf Field Name",
      "description": "Form field name for CSRF token in requests",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "csrf_token",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ACCESS_CSRF_FIELD_NAME"
    },
    {
      "key": "JWT_ACCESS_CSRF_HEADER_NAME",
      "title": "Jwt Access Csrf Header Name",
      "description": "HTTP header name for CSRF token in requests",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "X-CSRF-TOKEN",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ACCESS_CSRF_HEADER_NAME"
    },
    {
      "key": "JWT_ACCESS_TOKEN_EXPIRES",
      "title": "Jwt Access Token Expires",
      "description": "Expiration time for JWT access tokens",
      "details": "",
      "type": "timedelta",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "<timedelta instance>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ACCESS_TOKEN_EXPIRES"
    },
    {
      "key": "JWT_ALGORITHM",
      "title": "Jwt Algorithm",
      "description": "Algorithm used for JWT token signing and verification",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "HS256",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ALGORITHM"
    },
    {
      "key": "JWT_COOKIE_CSRF_PROTECT",
      "title": "Jwt Cookie Csrf Protect",
      "description": "Enable CSRF protection for JWT cookies",
      "details": "",
      "type": "bool",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_COOKIE_CSRF_PROTECT"
    },
    {
      "key": "JWT_COOKIE_DOMAIN",
      "title": "Jwt Cookie Domain",
      "description": "Domain restriction for JWT cookies",
      "details": "",
      "type": "None",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_COOKIE_DOMAIN"
    },
    {
      "key": "JWT_COOKIE_SAMESITE",
      "title": "Jwt Cookie Samesite",
      "description": "SameSite attribute for JWT cookies",
      "details": "",
      "type": "None",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_COOKIE_SAMESITE"
    },
    {
      "key": "JWT_COOKIE_SECURE",
      "title": "Jwt Cookie Secure",
      "description": "Require HTTPS for JWT cookies",
      "details": "",
      "type": "bool",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_COOKIE_SECURE"
    },
    {
      "key": "JWT_CSRF_CHECK_FORM",
      "title": "Jwt Csrf Check Form",
      "description": "Enable CSRF token checking in form data",
      "details": "",
      "type": "bool",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_CSRF_CHECK_FORM"
    },
    {
      "key": "JWT_CSRF_IN_COOKIES",
      "title": "Jwt Csrf In Cookies",
      "description": "Store CSRF tokens in separate cookies",
      "details": "",
      "type": "bool",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_CSRF_IN_COOKIES"
    },
    {
      "key": "JWT_CSRF_METHODS",
      "title": "Jwt Csrf Methods",
      "description": "HTTP methods that require CSRF token validation",
      "details": "",
      "type": "list",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "['POST', 'PUT', 'PATCH', 'DELETE']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_CSRF_METHODS"
    },
    {
      "key": "JWT_DECODE_ALGORITHMS",
      "title": "Jwt Decode Algorithms",
      "description": "Algorithms allowed for JWT token decoding",
      "details": "",
      "type": "None",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_DECODE_ALGORITHMS"
    },
    {
      "key": "JWT_DECODE_AUDIENCE",
      "title": "Jwt Decode Audience",
      "description": "Expected audience claim when decoding JWT tokens",
      "details": "",
      "type": "None",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_DECODE_AUDIENCE"
    },
    {
      "key": "JWT_DECODE_ISSUER",
      "title": "Jwt Decode Issuer",
      "description": "Expected issuer claim when decoding JWT tokens",
      "details": "",
      "type": "None",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_DECODE_ISSUER"
    },
    {
      "key": "JWT_DECODE_LEEWAY",
      "title": "Jwt Decode Leeway",
      "description": "Time leeway in seconds for JWT token validation",
      "details": "",
      "type": "int",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "0",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_DECODE_LEEWAY"
    },
    {
      "key": "JWT_ENCODE_AUDIENCE",
      "title": "Jwt Encode Audience",
      "description": "Audience claim to include when encoding JWT tokens",
      "details": "",
      "type": "None",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ENCODE_AUDIENCE"
    },
    {
      "key": "JWT_ENCODE_ISSUER",
      "title": "Jwt Encode Issuer",
      "description": "Issuer claim to include when encoding JWT tokens",
      "details": "",
      "type": "None",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ENCODE_ISSUER"
    },
    {
      "key": "JWT_ENCODE_NBF",
      "title": "Jwt Encode Nbf",
      "description": "Include not-before claim in JWT tokens",
      "details": "",
      "type": "bool",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ENCODE_NBF"
    },
    {
      "key": "JWT_ERROR_MESSAGE_KEY",
      "title": "Jwt Error Message Key",
      "description": "JSON key name for JWT error messages",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "msg",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_ERROR_MESSAGE_KEY"
    },
    {
      "key": "JWT_HEADER_NAME",
      "title": "Jwt Header Name",
      "description": "HTTP header name for JWT token transmission",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "Authorization",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_HEADER_NAME"
    },
    {
      "key": "JWT_HEADER_TYPE",
      "title": "Jwt Header Type",
      "description": "Token type prefix for Authorization header",
      "details": "",
      "type": "str",
      "category": "core",
      "group": "Flask-JWT-Extended Configuration",
      "default": "Bearer",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_HEADER_TYPE"
    },
    {
      "key": "JWT_IDENTITY_CLAIM",
      "title": "Jwt Identity Claim",
      "description": "JWT claim field used to identify the user",
      "details": "Specifies which claim in the JWT token contains the user identity information. The 'sub' (subject) claim is the standard JWT claim for user identification, but this can be customized to use other claims like 'email' or 'username' depending on your JWT implementation.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "sub",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_IDENTITY_CLAIM"
    },
    {
      "key": "JWT_JSON_KEY",
      "title": "Jwt Json Key",
      "description": "JSON key for extracting JWT token from request data",
      "details": "Specifies the key name in JSON request payloads that contains the JWT token. This is used when JWT tokens are sent in the request body rather than headers or query parameters, allowing flexible token transmission methods.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "access_token",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_JSON_KEY"
    },
    {
      "key": "JWT_PRIVATE_KEY",
      "title": "Jwt Private Key",
      "description": "Private key for signing JWT tokens",
      "details": "The private key used to sign JWT tokens when using asymmetric cryptography (RS256, ES256, etc.). This key should be kept secure and is used to generate signed tokens that can be verified using the corresponding public key. Required for JWT token generation.",
      "type": "None",
      "category": "core",
      "group": "JWT Authentication",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_PRIVATE_KEY"
    },
    {
      "key": "JWT_PUBLIC_KEY",
      "title": "Jwt Public Key",
      "description": "Public key for verifying JWT token signatures",
      "details": "The public key used to verify JWT token signatures when using asymmetric cryptography. This key corresponds to the private key used for signing and allows the application to validate that tokens are authentic and haven't been tampered with.",
      "type": "None",
      "category": "core",
      "group": "JWT Authentication",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_PUBLIC_KEY"
    },
    {
      "key": "JWT_QUERY_STRING_NAME",
      "title": "Jwt Query String Name",
      "description": "Query parameter name for JWT token in URL",
      "details": "Specifies the query string parameter name that contains the JWT token when tokens are passed via URL parameters. For example, if set to 'token', the JWT would be passed as '?token=eyJ...' in the URL.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "jwt",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_QUERY_STRING_NAME"
    },
    {
      "key": "JWT_QUERY_STRING_VALUE_PREFIX",
      "title": "Jwt Query String Value Prefix",
      "description": "Prefix required before JWT token in query string values",
      "details": "Defines a prefix that must precede the JWT token when passed via query string parameters. For example, if set to 'Bearer ', the query parameter value should be 'Bearer eyJ...' rather than just the raw token.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_QUERY_STRING_VALUE_PREFIX"
    },
    {
      "key": "JWT_REFRESH_COOKIE_NAME",
      "title": "Jwt Refresh Cookie Name",
      "description": "Cookie name for storing JWT refresh tokens",
      "details": "Specifies the name of the HTTP cookie used to store JWT refresh tokens. Refresh tokens are used to obtain new access tokens when the original token expires, enabling seamless user sessions without requiring re-authentication.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "refresh_token_cookie",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_REFRESH_COOKIE_NAME"
    },
    {
      "key": "JWT_REFRESH_COOKIE_PATH",
      "title": "Jwt Refresh Cookie Path",
      "description": "Path for JWT refresh token cookies",
      "details": "Sets the path where JWT refresh token cookies are valid. Used by Flask-JWT-Extended.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_REFRESH_COOKIE_PATH"
    },
    {
      "key": "JWT_REFRESH_CSRF_COOKIE_NAME",
      "title": "Jwt Refresh Csrf Cookie Name",
      "description": "Name of CSRF cookie for JWT refresh tokens",
      "details": "Cookie name for CSRF protection when using JWT refresh tokens. Used by Flask-JWT-Extended.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "csrf_refresh_token",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_REFRESH_CSRF_COOKIE_NAME"
    },
    {
      "key": "JWT_REFRESH_CSRF_COOKIE_PATH",
      "title": "Jwt Refresh Csrf Cookie Path",
      "description": "Path for JWT refresh CSRF cookies",
      "details": "Sets the path where JWT refresh CSRF cookies are valid. Used by Flask-JWT-Extended.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_REFRESH_CSRF_COOKIE_PATH"
    },
    {
      "key": "JWT_REFRESH_CSRF_FIELD_NAME",
      "title": "Jwt Refresh Csrf Field Name",
      "description": "Form field name for JWT refresh CSRF tokens",
      "details": "The name of the form field that contains the CSRF token for JWT refresh requests. Used by Flask-JWT-Extended.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "csrf_token",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_REFRESH_CSRF_FIELD_NAME"
    },
    {
      "key": "JWT_REFRESH_CSRF_HEADER_NAME",
      "title": "Jwt Refresh Csrf Header Name",
      "description": "HTTP header name for JWT refresh CSRF tokens",
      "details": "The name of the HTTP header that contains the CSRF token for JWT refresh requests. Used by Flask-JWT-Extended.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "X-CSRF-TOKEN",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_REFRESH_CSRF_HEADER_NAME"
    },
    {
      "key": "JWT_REFRESH_JSON_KEY",
      "title": "Jwt Refresh Json Key",
      "description": "JSON key name for JWT refresh tokens",
      "details": "The key name in JSON payloads that contains the JWT refresh token. Used by Flask-JWT-Extended.",
      "type": "str",
      "category": "core",
      "group": "JWT Authentication",
      "default": "refresh_token",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_REFRESH_JSON_KEY"
    },
    {
      "key": "JWT_REFRESH_TOKEN_EXPIRES",
      "title": "Jwt Refresh Token Expires",
      "description": "JWT refresh token expiration time",
      "details": "How long JWT refresh tokens remain valid before expiring. Used by Flask-JWT-Extended.",
      "type": "timedelta",
      "category": "core",
      "group": "JWT Authentication",
      "default": "<timedelta instance>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_REFRESH_TOKEN_EXPIRES"
    },
    {
      "key": "JWT_SECRET_KEY",
      "title": "Jwt Secret Key",
      "description": "Secret key for JWT token signing",
      "details": "Secret key used to sign JWT tokens. If None, falls back to Flask's SECRET_KEY. Used by Flask-JWT-Extended.",
      "type": "None",
      "category": "core",
      "group": "JWT Authentication",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_SECRET_KEY"
    },
    {
      "key": "JWT_SESSION_COOKIE",
      "title": "Jwt Session Cookie",
      "description": "Whether JWT cookies expire when browser closes",
      "details": "If True, JWT cookies are session cookies that expire when the browser closes. Used by Flask-JWT-Extended.",
      "type": "bool",
      "category": "core",
      "group": "JWT Authentication",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_SESSION_COOKIE"
    },
    {
      "key": "JWT_TOKEN_LOCATION",
      "title": "Jwt Token Location",
      "description": "Where to look for JWT tokens in requests",
      "details": "Specifies where Flask-JWT-Extended should look for JWT tokens (headers, cookies, query_string, json). Used by Flask-JWT-Extended.",
      "type": "tuple",
      "category": "core",
      "group": "JWT Authentication",
      "default": "['headers']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_TOKEN_LOCATION"
    },
    {
      "key": "JWT_VERIFY_SUB",
      "title": "Jwt Verify Sub",
      "description": "Whether to verify JWT subject claim",
      "details": "If True, Flask-JWT-Extended will verify the 'sub' (subject) claim in JWT tokens. Used by Flask-JWT-Extended.",
      "type": "bool",
      "category": "core",
      "group": "JWT Authentication",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__JWT_VERIFY_SUB"
    },
    {
      "key": "LOGGING_CONFIGURATOR",
      "title": "Logging Configurator",
      "description": "Logging configuration class instance",
      "details": "Instance of the logging configurator class that sets up Superset's logging system. Uses LOG_* settings below.",
      "type": "None",
      "category": "core",
      "group": "Logging",
      "default": "<DefaultLoggingConfigurator instance>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__LOGGING_CONFIGURATOR"
    },
    {
      "key": "LOGO_RIGHT_TEXT",
      "title": "Logo Right Text",
      "description": "Text displayed to the right of the logo",
      "details": "Any text that should appear to the right of the Superset logo in the UI header.",
      "type": "str",
      "category": "core",
      "group": "UI Customization",
      "default": "",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__LOGO_RIGHT_TEXT"
    },
    {
      "key": "LOG_FORMAT",
      "title": "Log Format",
      "description": "Python logging format string",
      "details": "Format string for console log messages using Python's logging format syntax. Used by the default logging configurator.",
      "type": "str",
      "category": "core",
      "group": "Logging",
      "default": "%(asctime)s:%(levelname)s:%(name)s:%(message)s",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__LOG_FORMAT"
    },
    {
      "key": "LOG_LEVEL",
      "title": "Log Level",
      "description": "Python logging level for console output",
      "details": "Minimum logging level for console output. 20=INFO, 10=DEBUG, 30=WARNING, 40=ERROR, 50=CRITICAL.",
      "type": "int",
      "category": "core",
      "group": "Logging",
      "default": "20",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__LOG_LEVEL"
    },
    {
      "key": "MACHINE_AUTH_PROVIDER_CLASS",
      "title": "Machine Auth Provider Class",
      "description": "Machine-to-machine authentication provider class",
      "details": "Class path for the machine authentication provider used for programmatic API access and inter-service communication.",
      "type": "str",
      "category": "core",
      "group": "Authentication",
      "default": "superset.utils.machine_auth.MachineAuthProvider",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__MACHINE_AUTH_PROVIDER_CLASS"
    },
    {
      "key": "MAPBOX_API_KEY",
      "title": "Mapbox Api Key",
      "description": "API key for enabling Mapbox visualizations",
      "details": "Set this API key to enable Mapbox-based map visualizations in Superset. Can be set via MAPBOX_API_KEY environment variable. Required for geographic data visualizations using Mapbox tiles.",
      "type": "str",
      "category": "core",
      "group": "Visualization",
      "default": "",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__MAPBOX_API_KEY"
    },
    {
      "key": "MAX_CONTENT_LENGTH",
      "title": "Max Content Length",
      "description": "Maximum allowed content length for HTTP requests",
      "details": "Flask configuration setting that controls the maximum size of incoming request data. When set to None, Flask uses its default limit. Helps prevent denial-of-service attacks from large payloads.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__MAX_CONTENT_LENGTH"
    },
    {
      "key": "MUTATE_AFTER_SPLIT",
      "title": "Mutate After Split",
      "description": "Apply SQL_QUERY_MUTATOR before or after splitting the input query",
      "details": "Controls when SQL_QUERY_MUTATOR function is applied. When True, mutations are applied to each statement after the query is split. Useful for applying role-based access controls or SET ROLE statements to every user query in both SQL Lab and Charts.",
      "type": "bool",
      "category": "core",
      "group": "SQL Query Mutation",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__MUTATE_AFTER_SPLIT"
    },
    {
      "key": "MUTATE_ALERT_QUERY",
      "title": "Mutate Alert Query",
      "description": "Apply SQL mutation to alert queries",
      "details": "Determines whether alert SQL queries should also be processed by the SQL_QUERY_MUTATOR function. When enabled, alerts follow the same SQL transformation rules as regular queries.",
      "type": "bool",
      "category": "core",
      "group": "SQL Query Mutation",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__MUTATE_ALERT_QUERY"
    },
    {
      "key": "NATIVE_FILTER_DEFAULT_ROW_LIMIT",
      "title": "Native Filter Default Row Limit",
      "description": "Default row limit for native filters",
      "details": "Maximum number of rows retrieved when loading options for native dashboard filters. Controls performance by limiting the amount of data processed for filter dropdowns and search functionality.",
      "type": "int",
      "category": "core",
      "group": "Row Limits",
      "default": "1000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__NATIVE_FILTER_DEFAULT_ROW_LIMIT"
    },
    {
      "key": "NO_TIME_RANGE",
      "title": "No Time Range",
      "description": "Display text for no time range filter option",
      "details": "Text displayed in the UI when no time range filter is applied. Used as the default time filter option in explore view and throughout the application when time-based filtering is not active.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "No filter",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__NO_TIME_RANGE"
    },
    {
      "key": "PACKAGE_JSON_FILE",
      "title": "Package Json File",
      "description": "Path to frontend package.json file",
      "details": "File path to the package.json file containing frontend build information and version details. Used by the application to reference frontend asset metadata and build configuration.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "/Users/max/code/superset-worktree/flask_config/superset/static/assets/package.json",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__PACKAGE_JSON_FILE"
    },
    {
      "key": "PRESTO_POLL_INTERVAL",
      "title": "Presto Poll Interval",
      "description": "Polling interval for Presto query execution",
      "details": "Time interval in seconds between consecutive polls when executing queries on Presto/Trino engines. Lower values provide more responsive query status updates but increase server load. Based on PyHive Presto implementation.",
      "type": "int",
      "category": "core",
      "group": "Database Polling",
      "default": "1",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__PRESTO_POLL_INTERVAL"
    },
    {
      "key": "QUERY_SEARCH_LIMIT",
      "title": "Query Search Limit",
      "description": "Maximum number of queries returned in search results",
      "details": "Limits the number of query history entries returned when searching through saved queries in SQL Lab. Helps maintain reasonable response times and UI performance when dealing with large query history.",
      "type": "int",
      "category": "core",
      "group": "Search Limits",
      "default": "1000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__QUERY_SEARCH_LIMIT"
    },
    {
      "key": "ROW_LIMIT",
      "title": "Row Limit",
      "description": "Default row limit when requesting chart data",
      "details": "Maximum number of rows returned when rendering charts in explore view and dashboards. This limit helps prevent performance issues with large datasets. Can be overridden per chart or query.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "50000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ROW_LIMIT"
    },
    {
      "key": "SAMPLES_ROW_LIMIT",
      "title": "Samples Row Limit",
      "description": "Default row limit when requesting samples from datasource in explore view",
      "details": "Maximum number of sample rows displayed when previewing data in the explore interface. Used for data profiling and quick dataset inspection before creating visualizations.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "1000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SAMPLES_ROW_LIMIT"
    },
    {
      "key": "SCREENSHOT_LOAD_WAIT",
      "title": "Screenshot Load Wait",
      "description": "Maximum time to wait for page loading before taking screenshot (seconds)",
      "details": "Timeout value for how long the screenshot service should wait for a page to fully load before capturing the image. Longer waits allow complex dashboards to render completely.",
      "type": "int",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "60",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_LOAD_WAIT"
    },
    {
      "key": "SCREENSHOT_LOCATE_WAIT",
      "title": "Screenshot Locate Wait",
      "description": "Time to wait for elements to be located during screenshot capture (seconds)",
      "details": "Maximum time to wait for specific elements to appear on the page before taking a screenshot. Used to ensure all UI components are visible before capture.",
      "type": "int",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "10",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_LOCATE_WAIT"
    },
    {
      "key": "SCREENSHOT_PLAYWRIGHT_DEFAULT_TIMEOUT",
      "title": "Screenshot Playwright Default Timeout",
      "description": "Default timeout for Playwright operations during screenshot capture (milliseconds)",
      "details": "Global timeout setting for all Playwright browser operations when taking screenshots. Includes page navigation, element waiting, and other browser interactions.",
      "type": "int",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "60000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_PLAYWRIGHT_DEFAULT_TIMEOUT"
    },
    {
      "key": "SCREENSHOT_PLAYWRIGHT_WAIT_EVENT",
      "title": "Screenshot Playwright Wait Event",
      "description": "Browser event to wait for before taking screenshots with Playwright",
      "details": "Specifies which browser event to wait for before capturing screenshots. Options include 'load' (all resources), 'domcontentloaded' (DOM ready), 'networkidle' (no network activity).",
      "type": "str",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "domcontentloaded",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_PLAYWRIGHT_WAIT_EVENT"
    },
    {
      "key": "SCREENSHOT_REPLACE_UNEXPECTED_ERRORS",
      "title": "Screenshot Replace Unexpected Errors",
      "description": "Replace unexpected errors in screenshots with real error messages",
      "details": "When enabled, replaces generic error messages in screenshot captures with more descriptive error details for better debugging and reporting.",
      "type": "bool",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_REPLACE_UNEXPECTED_ERRORS"
    },
    {
      "key": "SCREENSHOT_SELENIUM_ANIMATION_WAIT",
      "title": "Screenshot Selenium Animation Wait",
      "description": "Wait time for chart animations during screenshot capture",
      "details": "Number of seconds to wait for chart animations to complete before taking a screenshot. Ensures animations are fully rendered in captured images.",
      "type": "int",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "5",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_SELENIUM_ANIMATION_WAIT"
    },
    {
      "key": "SCREENSHOT_SELENIUM_HEADSTART",
      "title": "Screenshot Selenium Headstart",
      "description": "Initial delay before starting screenshot capture",
      "details": "Number of seconds to wait before beginning the screenshot process, giving Selenium a headstart to ensure the page is properly loaded.",
      "type": "int",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "3",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_SELENIUM_HEADSTART"
    },
    {
      "key": "SCREENSHOT_SELENIUM_RETRIES",
      "title": "Screenshot Selenium Retries",
      "description": "Number of retry attempts for failed screenshot captures",
      "details": "Maximum number of times to retry screenshot capture if it fails due to Selenium errors or timeouts. Helps handle transient issues.",
      "type": "int",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "5",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_SELENIUM_RETRIES"
    },
    {
      "key": "SCREENSHOT_WAIT_FOR_ERROR_MODAL_INVISIBLE",
      "title": "Screenshot Wait For Error Modal Invisible",
      "description": "Maximum wait time for error modal to disappear",
      "details": "Number of seconds to wait for error message modals to close before proceeding with screenshot capture. Ensures clean screenshots without error overlays.",
      "type": "int",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "5",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_WAIT_FOR_ERROR_MODAL_INVISIBLE"
    },
    {
      "key": "SCREENSHOT_WAIT_FOR_ERROR_MODAL_VISIBLE",
      "title": "Screenshot Wait For Error Modal Visible",
      "description": "Maximum wait time for error modal to appear",
      "details": "Number of seconds to wait for error message modals to show up when expected. Used to capture error states in screenshots for debugging.",
      "type": "int",
      "category": "core",
      "group": "Screenshot Generation",
      "default": "5",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SCREENSHOT_WAIT_FOR_ERROR_MODAL_VISIBLE"
    },
    {
      "key": "SECRET_KEY",
      "title": "Secret Key",
      "description": "Flask secret key for session management and cryptographic operations",
      "details": "Used by Flask for signing session cookies, CSRF tokens, and other security features. Must be changed to a strong, random string in production. Can be set via SUPERSET_SECRET_KEY environment variable.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "unbeaucaca",
      "external": true,
      "source": "flask",
      "supports_callable": false,
      "env_var": "SUPERSET__SECRET_KEY"
    },
    {
      "key": "SEND_FILE_MAX_AGE_DEFAULT",
      "title": "Send File Max Age Default",
      "description": "Default cache timeout for static files served by Flask",
      "details": "Maximum age in seconds for client-side caching of static files sent via Flask's send_file() function. Default is 1 year (31536000 seconds).",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "31536000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SEND_FILE_MAX_AGE_DEFAULT"
    },
    {
      "key": "SERVER_NAME",
      "title": "Server Name",
      "description": "Flask server name for URL generation",
      "details": "The name and port number of the server. Required for subdomain support and proper URL generation in some contexts. Format: 'example.com:5000' or 'localhost:8088'.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SERVER_NAME"
    },
    {
      "key": "SESSION_COOKIE_PATH",
      "title": "Session Cookie Path",
      "description": "URL path for which session cookies are valid",
      "details": "Restricts the scope of session cookies to a specific path. Default None uses Flask's default behavior (typically '/').",
      "type": "None",
      "category": "core",
      "group": "Session Cookies",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SESSION_COOKIE_PATH"
    },
    {
      "key": "SESSION_COOKIE_SAMESITE",
      "title": "Session Cookie Samesite",
      "description": "SameSite attribute for session cookies",
      "details": "Controls when cookies are sent in cross-site requests. 'Lax' allows cookies in top-level navigation but blocks in embedded contexts. Options: 'Strict', 'Lax', 'None'.",
      "type": "str",
      "category": "core",
      "group": "Session Cookies",
      "default": "Lax",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SESSION_COOKIE_SAMESITE"
    },
    {
      "key": "SESSION_COOKIE_SECURE",
      "title": "Session Cookie Secure",
      "description": "Require HTTPS for session cookies",
      "details": "When True, session cookies are only sent over HTTPS connections. Should be enabled in production environments using SSL/TLS.",
      "type": "bool",
      "category": "core",
      "group": "Session Cookies",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SESSION_COOKIE_SECURE"
    },
    {
      "key": "SHOW_STACKTRACE",
      "title": "Show Stacktrace",
      "description": "Display Python stack traces to users when errors occur",
      "details": "When enabled, shows detailed Python stack traces to users when server errors occur. Useful for debugging but should be disabled in production for security reasons.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SHOW_STACKTRACE"
    },
    {
      "key": "SILENCE_FAB",
      "title": "Silence Fab",
      "description": "Suppress Flask-AppBuilder logging messages",
      "details": "When True, raises the logging level to ERROR for the Flask-AppBuilder package to reduce verbose output. Set to False when debugging FAB-related issues like permission management.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SILENCE_FAB"
    },
    {
      "key": "SLACK_API_TOKEN",
      "title": "Slack Api Token",
      "description": "Slack API token for sending reports and notifications",
      "details": "Authentication token for Slack API integration. Used to send dashboard reports and alerts to Slack channels. Can be a string token or callable function returning a token.",
      "type": "None",
      "category": "core",
      "group": "Slack Integration",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SLACK_API_TOKEN"
    },
    {
      "key": "SLACK_CACHE_TIMEOUT",
      "title": "Slack Cache Timeout",
      "description": "Cache timeout duration for Slack API responses in seconds",
      "details": "Controls how long Slack API responses are cached before being refreshed. Default is 24 hours (86400 seconds). Used for Superset alerts and reports sent via Slack.",
      "type": "int",
      "category": "core",
      "group": "Slack Integration",
      "default": "86400",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SLACK_CACHE_TIMEOUT"
    },
    {
      "key": "SLACK_PROXY",
      "title": "Slack Proxy",
      "description": "Proxy configuration for Slack API requests in alerts and reports",
      "details": "Optional proxy settings to use when making requests to Slack API for sending alert and report notifications. Set to None to use direct connections.",
      "type": "None",
      "category": "core",
      "group": "alerts_reports",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SLACK_PROXY"
    },
    {
      "key": "SQLALCHEMY_POOL_TIMEOUT",
      "title": "Sqlalchemy Pool Timeout",
      "description": "Database connection pool timeout in seconds",
      "details": "Maximum time in seconds to wait for a database connection from the pool before timing out. When None, uses SQLAlchemy's default behavior. Higher values allow more tolerance for slow connections but may impact performance under load.",
      "type": "None",
      "category": "database",
      "group": "",
      "default": "None",
      "external": true,
      "source": "flask-sqlalchemy",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLALCHEMY_POOL_TIMEOUT"
    },
    {
      "key": "SQLALCHEMY_RECORD_QUERIES",
      "title": "Sqlalchemy Record Queries",
      "description": "Enable recording of database queries for debugging",
      "details": "When enabled, SQLAlchemy will record all database queries which can be accessed via Flask's debug toolbar or logging. Useful for debugging but should be disabled in production due to performance and memory overhead. When None, follows Flask's DEBUG setting.",
      "type": "None",
      "category": "database",
      "group": "",
      "default": "None",
      "external": true,
      "source": "flask-sqlalchemy",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLALCHEMY_RECORD_QUERIES"
    },
    {
      "key": "SQLALCHEMY_TRACK_MODIFICATIONS",
      "title": "Sqlalchemy Track Modifications",
      "description": "Track modifications to SQLAlchemy objects",
      "details": "Controls whether Flask-SQLAlchemy tracks modifications of objects and emits signals. When False (recommended), disables the modification tracking system which improves performance and reduces memory usage. Set to True only if you need the before_models_committed or models_committed signals.",
      "type": "bool",
      "category": "database",
      "group": "",
      "default": "False",
      "external": true,
      "source": "flask-sqlalchemy",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLALCHEMY_TRACK_MODIFICATIONS"
    },
    {
      "key": "SQLA_TABLE_MUTATOR",
      "title": "Sqla Table Mutator",
      "description": "Callback function to mutate SQLAlchemy table objects",
      "details": "Function that allows modification of SQLAlchemy table objects based on naming conventions or other criteria. Called during table introspection to set properties on table objects. Default is a lambda that returns the table unchanged.",
      "type": "Callable",
      "category": "core",
      "group": "database",
      "default": "<function instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__SQLA_TABLE_MUTATOR"
    },
    {
      "key": "SQLGLOT_DIALECTS_EXTENSIONS",
      "title": "Sqlglot Dialects Extensions",
      "description": "Extensions to SQLGlot dialects for additional database support",
      "details": "Dictionary or callable that returns dialect extensions for SQLGlot parser. Used to extend support for database-specific SQL syntax beyond the default SQLGlot dialects.",
      "type": "dict",
      "category": "core",
      "group": "database",
      "default": "{}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLGLOT_DIALECTS_EXTENSIONS"
    },
    {
      "key": "SQLLAB_ASYNC_TIME_LIMIT_SEC",
      "title": "Sqllab Async Time Limit Sec",
      "description": "Maximum duration for async queries in SQL Lab before being terminated",
      "details": "The maximum time in seconds that an asynchronous query can run in SQL Lab before being killed by Celery. Default is 6 hours (21600 seconds). This prevents runaway queries from consuming resources indefinitely.",
      "type": "int",
      "category": "core",
      "group": "sqllab",
      "default": "21600",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_ASYNC_TIME_LIMIT_SEC"
    },
    {
      "key": "SQLLAB_CTAS_NO_LIMIT",
      "title": "Sqllab Ctas No Limit",
      "description": "Controls whether row limits are enforced on CREATE TABLE AS queries",
      "details": "Flag that determines if the standard row limit should be enforced on CREATE TABLE AS (CTAS) queries in SQL Lab. When False (default), CTAS queries respect the configured row limits. When True, CTAS queries can return unlimited rows.",
      "type": "bool",
      "category": "core",
      "group": "sqllab",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_CTAS_NO_LIMIT"
    },
    {
      "key": "SQLLAB_CTAS_SCHEMA_NAME_FUNC",
      "title": "Sqllab Ctas Schema Name Func",
      "description": "Custom function to determine target schema for CREATE TABLE AS queries",
      "details": "Optional function that defines custom logic for determining the target schema for CREATE TABLE AS queries in SQL Lab. The function receives database object, user object, schema name, and SQL string as parameters and returns the target schema name. Database CTAS Schema setting takes precedence over this function.",
      "type": "None",
      "category": "core",
      "group": "sqllab",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__SQLLAB_CTAS_SCHEMA_NAME_FUNC"
    },
    {
      "key": "SQLLAB_DEFAULT_DBID",
      "title": "Sqllab Default Dbid",
      "description": "Default database ID to pre-select in SQL Lab",
      "details": "Optional database ID that will be automatically selected when users first access SQL Lab. When None, no database is pre-selected and users must choose one manually.",
      "type": "None",
      "category": "core",
      "group": "sqllab",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_DEFAULT_DBID"
    },
    {
      "key": "SQLLAB_PAYLOAD_MAX_MB",
      "title": "Sqllab Payload Max Mb",
      "description": "Maximum payload size for SQL Lab query results to prevent browser hangs",
      "details": "Maximum size in megabytes for SQL Lab query result payloads. When set, prevents large result sets from being sent to the browser, which could cause performance issues or hangs. When None, no payload size limit is enforced.",
      "type": "None",
      "category": "core",
      "group": "sqllab",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_PAYLOAD_MAX_MB"
    },
    {
      "key": "SQLLAB_QUERY_COST_ESTIMATE_TIMEOUT",
      "title": "Sqllab Query Cost Estimate Timeout",
      "description": "Timeout for database EXPLAIN queries used for cost estimation",
      "details": "Timeout in seconds for EXPLAIN queries that estimate query costs before execution. These queries should have a small timeout since they're used for quick cost estimates. Default is 10 seconds.",
      "type": "int",
      "category": "core",
      "group": "sqllab",
      "default": "10",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_QUERY_COST_ESTIMATE_TIMEOUT"
    },
    {
      "key": "SQLLAB_QUERY_RESULT_TIMEOUT",
      "title": "Sqllab Query Result Timeout",
      "description": "Timeout for fetching query results by result key in SQL Lab",
      "details": "Timeout duration in seconds for SQL Lab to fetch query results using the results key. When set to 0 (default), no timeout is enforced and results can be fetched indefinitely.",
      "type": "int",
      "category": "core",
      "group": "sqllab",
      "default": "0",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_QUERY_RESULT_TIMEOUT"
    },
    {
      "key": "SQLLAB_SAVE_WARNING_MESSAGE",
      "title": "Sqllab Save Warning Message",
      "description": "Warning message displayed on SQL Lab save query modal",
      "details": "Optional warning message shown to users when they attempt to save queries in SQL Lab. Can be used to inform users about data retention policies, naming conventions, or other important information.",
      "type": "None",
      "category": "core",
      "group": "sqllab",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_SAVE_WARNING_MESSAGE"
    },
    {
      "key": "SQLLAB_SCHEDULE_WARNING_MESSAGE",
      "title": "Sqllab Schedule Warning Message",
      "description": "Warning message displayed on SQL Lab schedule query modal",
      "details": "Optional warning message shown to users when they attempt to schedule queries in SQL Lab. Can be used to inform users about scheduling policies, resource usage guidelines, or other scheduling-related information.",
      "type": "None",
      "category": "core",
      "group": "sqllab",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_SCHEDULE_WARNING_MESSAGE"
    },
    {
      "key": "SQLLAB_TIMEOUT",
      "title": "Sqllab Timeout",
      "description": "Timeout duration for synchronous SQL Lab queries",
      "details": "Maximum time in seconds that synchronous queries can run in SQL Lab before timing out. Default is 30 seconds. This applies to queries executed directly in the interface, not async queries.",
      "type": "int",
      "category": "core",
      "group": "sqllab",
      "default": "30",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_TIMEOUT"
    },
    {
      "key": "SQLLAB_VALIDATION_TIMEOUT",
      "title": "Sqllab Validation Timeout",
      "description": "Timeout duration for SQL Lab query validation",
      "details": "Maximum time in seconds for SQL query validation operations in SQL Lab. Default is 10 seconds. This applies to syntax checking and other validation processes before query execution.",
      "type": "int",
      "category": "core",
      "group": "sqllab",
      "default": "10",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQLLAB_VALIDATION_TIMEOUT"
    },
    {
      "key": "SQL_MAX_ROW",
      "title": "Sql Max Row",
      "description": "Maximum number of rows returned for any analytical database query",
      "details": "Global limit for all database queries executed through Superset, including SQL Lab queries and chart data requests. This is a hard limit to prevent runaway queries from overwhelming the database or application server.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "100000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQL_MAX_ROW"
    },
    {
      "key": "SQL_QUERY_MUTATOR",
      "title": "Sql Query Mutator",
      "description": "Function to modify SQL queries before execution",
      "details": "Callback function that allows modification of SQL queries before they are executed. Common use cases include adding comment headers with user information, applying security constraints, or modifying queries for compliance. The function receives the SQL string and additional keyword arguments and returns the modified SQL string.",
      "type": "Callable",
      "category": "core",
      "group": "database",
      "default": "<function instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__SQL_QUERY_MUTATOR"
    },
    {
      "key": "SQL_VALIDATORS_BY_ENGINE",
      "title": "Sql Validators By Engine",
      "description": "SQL validators mapped by database engine type",
      "details": "Dictionary mapping database engine names to their corresponding SQL validator classes. Validators are used to check SQL syntax and provide database-specific validation. Default includes validators for Presto and PostgreSQL engines.",
      "type": "dict",
      "category": "core",
      "group": "database",
      "default": "{'presto': 'PrestoDBSQLValidator', 'postgresql': 'PostgreSQLValidator'}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SQL_VALIDATORS_BY_ENGINE"
    },
    {
      "key": "SSH_TUNNEL_LOCAL_BIND_ADDRESS",
      "title": "Ssh Tunnel Local Bind Address",
      "description": "Local IP address for SSH tunnel binding",
      "details": "IP address used for the local end of SSH tunnels when connecting to databases through SSH. Default is 127.0.0.1 (localhost). This address is used to bind the local port that forwards traffic through the SSH tunnel.",
      "type": "str",
      "category": "core",
      "group": "ssh_tunneling",
      "default": "127.0.0.1",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SSH_TUNNEL_LOCAL_BIND_ADDRESS"
    },
    {
      "key": "SSH_TUNNEL_MANAGER_CLASS",
      "title": "Ssh Tunnel Manager Class",
      "description": "Class path for SSH tunnel manager implementation",
      "details": "Fully qualified class name for the SSH tunnel manager used to handle SSH connections for database access. Default is superset.extensions.ssh.SSHManager which provides the standard SSH tunneling functionality.",
      "type": "str",
      "category": "core",
      "group": "ssh_tunneling",
      "default": "superset.extensions.ssh.SSHManager",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SSH_TUNNEL_MANAGER_CLASS"
    },
    {
      "key": "SSH_TUNNEL_PACKET_TIMEOUT_SEC",
      "title": "Ssh Tunnel Packet Timeout Sec",
      "description": "Timeout for SSH tunnel transport socket operations",
      "details": "Timeout in seconds for transport socket operations (socket.settimeout) in SSH tunnels. Default is 1.0 second. This controls how long socket operations wait before timing out during SSH tunnel communication.",
      "type": "float",
      "category": "core",
      "group": "ssh_tunneling",
      "default": "1.0",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SSH_TUNNEL_PACKET_TIMEOUT_SEC"
    },
    {
      "key": "SSH_TUNNEL_TIMEOUT_SEC",
      "title": "Ssh Tunnel Timeout Sec",
      "description": "Timeout for SSH tunnel connection establishment",
      "details": "Timeout in seconds for establishing SSH tunnel connections (open_channel timeout). Default is 10.0 seconds. This controls how long to wait when opening a new SSH channel for database connections.",
      "type": "float",
      "category": "core",
      "group": "ssh_tunneling",
      "default": "10.0",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SSH_TUNNEL_TIMEOUT_SEC"
    },
    {
      "key": "SSL_CERT_PATH",
      "title": "Ssl Cert Path",
      "description": "Path for storing custom SSL certificates",
      "details": "Directory path where SSL certificates are stored when using custom certificates. Defaults to a temporary directory when None. Example: SSL_CERT_PATH = '/certs'. Used for secure database connections that require custom SSL certificates.",
      "type": "None",
      "category": "core",
      "group": "security",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SSL_CERT_PATH"
    },
    {
      "key": "STATIC_ASSETS_PREFIX",
      "title": "Static Assets Prefix",
      "description": "Prefix for static asset paths in the UI",
      "details": "Optional prefix added to all static asset paths when rendering the UI. Useful for hosting assets in an external CDN or serving assets from a different path. When empty, assets are served from the default location.",
      "type": "str",
      "category": "core",
      "group": "assets",
      "default": "",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__STATIC_ASSETS_PREFIX"
    },
    {
      "key": "STATS_LOGGER",
      "title": "Stats Logger",
      "description": "Realtime stats logger implementation",
      "details": "Logger implementation for collecting and reporting real-time statistics. Default is DummyStatsLogger which does nothing. Can be replaced with StatsD or other stats collection implementations for production monitoring.",
      "type": "None",
      "category": "core",
      "group": "logging",
      "default": "<DummyStatsLogger instance>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__STATS_LOGGER"
    },
    {
      "key": "STORE_CACHE_KEYS_IN_METADATA_DB",
      "title": "Store Cache Keys In Metadata Db",
      "description": "Store cache keys by datasource UID in metadata database",
      "details": "When enabled, cache keys are stored in the metadata database indexed by datasource UID (via CacheKey model). This allows for custom cache processing and invalidation strategies. Default is False for performance reasons.",
      "type": "bool",
      "category": "core",
      "group": "caching",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__STORE_CACHE_KEYS_IN_METADATA_DB"
    },
    {
      "key": "STR_NA_VALUES",
      "title": "Str Na Values",
      "description": "Set of string values that should be treated as None/NA values for CSV uploads.",
      "details": "Imported from pandas library and used as default NA names for CSV processing. These values are automatically converted to None during data ingestion.",
      "type": "set",
      "category": "core",
      "group": "",
      "default": "<set with 19 items>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__STR_NA_VALUES"
    },
    {
      "key": "SUPERSET_CLIENT_RETRY_ATTEMPTS",
      "title": "Superset Client Retry Attempts",
      "description": "Maximum number of retry attempts for HTTP requests made through SupersetClient.",
      "details": "Controls retry behavior for all HTTP requests to handle transient server errors (like 502 Bad Gateway) automatically. Works in conjunction with other SUPERSET_CLIENT_RETRY_* settings.",
      "type": "int",
      "category": "core",
      "group": "SupersetClient HTTP Retry Configuration",
      "default": "3",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_CLIENT_RETRY_ATTEMPTS"
    },
    {
      "key": "SUPERSET_CLIENT_RETRY_BACKOFF_MULTIPLIER",
      "title": "Superset Client Retry Backoff Multiplier",
      "description": "Exponential backoff multiplier for retry delays.",
      "details": "Each retry delay is multiplied by this value to implement exponential backoff. For example, with a multiplier of 2, delays progress as: 1s, 2s, 4s, 8s, etc.",
      "type": "int",
      "category": "core",
      "group": "SupersetClient HTTP Retry Configuration",
      "default": "2",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_CLIENT_RETRY_BACKOFF_MULTIPLIER"
    },
    {
      "key": "SUPERSET_CLIENT_RETRY_DELAY",
      "title": "Superset Client Retry Delay",
      "description": "Initial retry delay in milliseconds for SupersetClient HTTP requests.",
      "details": "Starting delay before the first retry attempt. Subsequent delays are calculated using the backoff multiplier and capped by the maximum delay setting.",
      "type": "int",
      "category": "core",
      "group": "SupersetClient HTTP Retry Configuration",
      "default": "1000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_CLIENT_RETRY_DELAY"
    },
    {
      "key": "SUPERSET_CLIENT_RETRY_JITTER_MAX",
      "title": "Superset Client Retry Jitter Max",
      "description": "Maximum random jitter in milliseconds added to retry delays.",
      "details": "Adds randomness to retry delays to prevent thundering herd problems when multiple clients retry simultaneously. Jitter is randomly selected between 0 and this maximum value.",
      "type": "int",
      "category": "core",
      "group": "SupersetClient HTTP Retry Configuration",
      "default": "1000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_CLIENT_RETRY_JITTER_MAX"
    },
    {
      "key": "SUPERSET_CLIENT_RETRY_MAX_DELAY",
      "title": "Superset Client Retry Max Delay",
      "description": "Maximum retry delay cap in milliseconds.",
      "details": "Upper limit for retry delays to prevent exponential backoff from creating excessively long wait times. Even with high backoff multipliers, delays will not exceed this value.",
      "type": "int",
      "category": "core",
      "group": "SupersetClient HTTP Retry Configuration",
      "default": "10000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_CLIENT_RETRY_MAX_DELAY"
    },
    {
      "key": "SUPERSET_CLIENT_RETRY_STATUS_CODES",
      "title": "Superset Client Retry Status Codes",
      "description": "HTTP status codes that should trigger automatic retries.",
      "details": "List of HTTP status codes that indicate transient server errors worthy of retry attempts. Default includes gateway errors: 502 (Bad Gateway), 503 (Service Unavailable), and 504 (Gateway Timeout).",
      "type": "list",
      "category": "core",
      "group": "SupersetClient HTTP Retry Configuration",
      "default": "[502, 503, 504]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_CLIENT_RETRY_STATUS_CODES"
    },
    {
      "key": "SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT",
      "title": "Superset Dashboard Periodical Refresh Limit",
      "description": "Minimum refresh interval limit for dashboard auto-refresh feature.",
      "details": "When users choose auto-refresh frequencies below this limit, they will see a warning message in the Refresh Interval Modal. Set to 0 to disable the limit. Used with SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE.",
      "type": "int",
      "category": "core",
      "group": "Dashboard Periodical Refresh",
      "default": "0",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT"
    },
    {
      "key": "SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE",
      "title": "Superset Dashboard Periodical Refresh Warning Message",
      "description": "Warning message displayed when users select frequent dashboard refresh intervals.",
      "details": "Custom message shown in the Refresh Interval Modal when users choose refresh frequencies below SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT. If None, no warning is displayed.",
      "type": "None",
      "category": "core",
      "group": "Dashboard Periodical Refresh",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE"
    },
    {
      "key": "SUPERSET_DASHBOARD_POSITION_DATA_LIMIT",
      "title": "Superset Dashboard Position Data Limit",
      "description": "Maximum size limit for dashboard position data storage.",
      "details": "Limits the amount of position data that can be stored for dashboard layouts. This prevents excessively large position configurations that could impact performance or storage.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "65535",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_DASHBOARD_POSITION_DATA_LIMIT"
    },
    {
      "key": "SUPERSET_LOG_VIEW",
      "title": "Superset Log View",
      "description": "Enable logging of user view actions and events.",
      "details": "Controls whether Superset logs user interactions and view events through the configured event logger. Used for analytics, auditing, and monitoring user behavior.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_LOG_VIEW"
    },
    {
      "key": "SUPERSET_META_DB_LIMIT",
      "title": "Superset Meta Db Limit",
      "description": "Row limit for Superset Meta DB queries when ENABLE_SUPERSET_META_DB feature is enabled.",
      "details": "Controls how much data is returned from each database when using the experimental Superset Meta DB feature that allows querying across multiple databases with a superset:// connection.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "1000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_META_DB_LIMIT"
    },
    {
      "key": "SUPERSET_SECURITY_VIEW_MENU",
      "title": "Superset Security View Menu",
      "description": "Enable/disable security menu items in the admin interface.",
      "details": "Controls visibility of security-related menu items including List Users, List Roles, and List Groups. When disabled, these administrative security views are hidden from the interface.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "True",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_SECURITY_VIEW_MENU"
    },
    {
      "key": "SUPERSET_WEBSERVER_DOMAINS",
      "title": "Superset Webserver Domains",
      "description": "Domain sharding configuration for Superset webserver (deprecated).",
      "details": "This feature is deprecated and will be removed in the next major version. It was used to enable domain sharding for better concurrent request handling, but HTTP/2 now serves the same purpose more effectively.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_WEBSERVER_DOMAINS"
    },
    {
      "key": "SUPERSET_WEBSERVER_TIMEOUT",
      "title": "Superset Webserver Timeout",
      "description": "Webserver request timeout in seconds",
      "details": "Maximum time in seconds that the Superset webserver will wait for a request to complete before timing out. This affects how long dashboard loads, chart queries, and other operations can run before being terminated. Higher values allow longer-running queries but may impact user experience.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "60",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SUPERSET_WEBSERVER_TIMEOUT"
    },
    {
      "key": "SYNC_DB_PERMISSIONS_IN_ASYNC_MODE",
      "title": "Sync Db Permissions In Async Mode",
      "description": "Run database permission synchronization in asynchronous mode using Celery workers.",
      "details": "When True, database permission syncing runs asynchronously via Celery workers instead of blocking web API calls. Recommended for databases with many catalogs/schemas as sync mode can take considerable time and keep API calls open.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__SYNC_DB_PERMISSIONS_IN_ASYNC_MODE"
    },
    {
      "key": "TABLE_VIZ_MAX_ROW_SERVER",
      "title": "Table Viz Max Row Server",
      "description": "Maximum number of rows for server-side pagination in Table visualization type.",
      "details": "Limits the maximum number of rows that can be displayed when using server-side pagination in table visualizations. This prevents performance issues with very large datasets while still allowing substantial data display.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "500000",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TABLE_VIZ_MAX_ROW_SERVER"
    },
    {
      "key": "TALISMAN_CONFIG",
      "title": "Talisman Config",
      "description": "Production security configuration for Talisman Flask extension.",
      "details": "Talisman provides security headers including Content Security Policy (CSP) for production environments. Includes strict CSP rules with nonce support for scripts, secure cookie settings, and HTTPS enforcement options.",
      "type": "dict",
      "category": "core",
      "group": "Talisman Security Configuration",
      "default": "{'content_security_policy': {'base-uri': [\"'self'\"], 'default-src': [\"'self'\"], 'img-src': [\"'self'\", 'blob:', 'data:', 'https://apachesuperset.gateway.scarf.sh', 'https://static.scarf.sh/', 'ows.terrestris.de', 'https://cdn.document360.io'], 'worker-src': [\"'self'\", 'blob:'], 'connect-src': [\"'self'\", 'https://api.mapbox.com', 'https://events.mapbox.com', 'https://tile.openstreetmap.org', 'https://tile.osm.ch'], 'object-src': \"'none'\", 'style-src': [\"'self'\", \"'unsafe-inline'\"], 'script-src': [\"'self'\", \"'strict-dynamic'\"]}, 'content_security_policy_nonce_in': ['script-src'], 'force_https': False, 'session_cookie_secure': False}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TALISMAN_CONFIG"
    },
    {
      "key": "TALISMAN_DEV_CONFIG",
      "title": "Talisman Dev Config",
      "description": "Development security configuration for Talisman Flask extension.",
      "details": "Relaxed Talisman configuration for development environments. Includes 'unsafe-inline' and 'unsafe-eval' script permissions to support development tools and hot reloading, plus additional allowed image sources for development assets.",
      "type": "dict",
      "category": "core",
      "group": "Talisman Security Configuration",
      "default": "{'content_security_policy': {'base-uri': [\"'self'\"], 'default-src': [\"'self'\"], 'img-src': [\"'self'\", 'blob:', 'data:', 'https://apachesuperset.gateway.scarf.sh', 'https://static.scarf.sh/', 'https://cdn.brandfolder.io', 'ows.terrestris.de', 'https://cdn.document360.io'], 'worker-src': [\"'self'\", 'blob:'], 'connect-src': [\"'self'\", 'https://api.mapbox.com', 'https://events.mapbox.com', 'https://tile.openstreetmap.org', 'https://tile.osm.ch'], 'object-src': \"'none'\", 'style-src': [\"'self'\", \"'unsafe-inline'\"], 'script-src': [\"'self'\", \"'unsafe-inline'\", \"'unsafe-eval'\"]}, 'content_security_policy_nonce_in': ['script-src'], 'force_https': False, 'session_cookie_secure': False}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TALISMAN_DEV_CONFIG"
    },
    {
      "key": "TALISMAN_ENABLED",
      "title": "Talisman Enabled",
      "description": "Enable or disable the Talisman Flask security extension.",
      "details": "When enabled, Talisman adds security headers including Content Security Policy, HSTS, and other protective measures. Uses TALISMAN_CONFIG or TALISMAN_DEV_CONFIG depending on environment.",
      "type": "bool",
      "category": "core",
      "group": "Talisman Security Configuration",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TALISMAN_ENABLED"
    },
    {
      "key": "TEMPLATES_AUTO_RELOAD",
      "title": "Templates Auto Reload",
      "description": "Flask template auto-reloading configuration.",
      "details": "Controls whether Flask automatically reloads templates when they change. When None, Flask uses its default behavior. Set to True for development to see template changes immediately, False for production to improve performance.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TEMPLATES_AUTO_RELOAD"
    },
    {
      "key": "TESTING",
      "title": "Testing",
      "description": "Enable testing mode for Flask application",
      "details": "Flask's built-in testing mode flag. When True, enables testing mode which disables error catching during request handling, making exceptions propagate directly for easier debugging. Automatically set to True when running unit tests. Should never be True in production.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": true,
      "source": "flask",
      "supports_callable": false,
      "env_var": "SUPERSET__TESTING"
    },
    {
      "key": "TEST_DATABASE_CONNECTION_TIMEOUT",
      "title": "Test Database Connection Timeout",
      "description": "Timeout duration for testing database connections when adding new databases.",
      "details": "Specifies how long to wait when testing database connectivity during database setup. Default is 30 seconds. Prevents long waits when database parameters are incorrect, as some SQLAlchemy drivers can take minutes to timeout.",
      "type": "timedelta",
      "category": "core",
      "group": "",
      "default": "<timedelta instance>",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TEST_DATABASE_CONNECTION_TIMEOUT"
    },
    {
      "key": "THEME_DARK",
      "title": "Theme Dark",
      "description": "Dark theme configuration following Ant Design theme format.",
      "details": "Applied when users select dark mode. Uses Ant Design theme structure with algorithm set to 'dark'. Can be customized with specific tokens, colors, and styling properties using the Ant Design Theme Editor.",
      "type": "dict",
      "category": "core",
      "group": "Theme Configuration",
      "default": "{'algorithm': 'dark'}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__THEME_DARK"
    },
    {
      "key": "THEME_DEFAULT",
      "title": "Theme Default",
      "description": "Default theme configuration following Ant Design theme format.",
      "details": "Base theme used when no dark mode is selected. Uses Ant Design theme structure with algorithm set to 'default'. Can be customized with brand colors, fonts, and other design tokens using the Ant Design Theme Editor.",
      "type": "dict",
      "category": "core",
      "group": "Theme Configuration",
      "default": "{'algorithm': 'default'}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__THEME_DEFAULT"
    },
    {
      "key": "THEME_SETTINGS",
      "title": "Theme Settings",
      "description": "Theme behavior and user preference settings.",
      "details": "Controls how themes are applied: 'enforced' forces default theme ignoring user preferences, 'allowSwitching' lets users manually switch between themes, 'allowOSPreference' auto-detects system theme preference.",
      "type": "dict",
      "category": "core",
      "group": "Theme Configuration",
      "default": "{'enforced': False, 'allowSwitching': True, 'allowOSPreference': True}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__THEME_SETTINGS"
    },
    {
      "key": "THUMBNAIL_CACHE_CONFIG",
      "title": "Thumbnail Cache Config",
      "description": "Cache configuration for dashboard and chart thumbnails.",
      "details": "Configures caching for generated thumbnails/screenshots. Default uses NullCache (no caching) with 7-day timeout. For production, configure with Redis or other cache backend when THUMBNAILS feature flag is enabled.",
      "type": "dict",
      "category": "core",
      "group": "",
      "default": "{'CACHE_TYPE': 'NullCache', 'CACHE_DEFAULT_TIMEOUT': 604800, 'CACHE_NO_NULL_WARNING': True}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__THUMBNAIL_CACHE_CONFIG"
    },
    {
      "key": "THUMBNAIL_CHART_DIGEST_FUNC",
      "title": "Thumbnail Chart Digest Func",
      "description": "Custom function to generate chart thumbnail cache keys",
      "details": "Optional callable that generates unique digest keys for chart thumbnails. Used to determine when thumbnails need to be regenerated. If None, uses the default digest function. Custom functions should return a string that changes when the chart visualization should be updated.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__THUMBNAIL_CHART_DIGEST_FUNC"
    },
    {
      "key": "THUMBNAIL_DASHBOARD_DIGEST_FUNC",
      "title": "Thumbnail Dashboard Digest Func",
      "description": "Custom function to generate dashboard thumbnail cache keys",
      "details": "Optional callable that generates unique digest keys for dashboard thumbnails. Used to determine when thumbnails need to be regenerated. If None, uses the default digest function. Custom functions should return a string that changes when the dashboard layout or content should be updated.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__THUMBNAIL_DASHBOARD_DIGEST_FUNC"
    },
    {
      "key": "THUMBNAIL_ERROR_CACHE_TTL",
      "title": "Thumbnail Error Cache Ttl",
      "description": "Cache duration for thumbnail generation errors in seconds",
      "details": "Time to live (TTL) in seconds for caching thumbnail generation errors. When thumbnail generation fails, the error is cached for this duration to avoid repeatedly attempting to generate the same failing thumbnail. Default is 86400 seconds (24 hours). Lower values retry failed thumbnails more frequently.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "86400",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__THUMBNAIL_ERROR_CACHE_TTL"
    },
    {
      "key": "THUMBNAIL_EXECUTORS",
      "title": "Thumbnail Executors",
      "description": "List of execution contexts for thumbnail generation",
      "details": "Defines the execution contexts used when generating thumbnails. 'current_user' means thumbnails are generated with the permissions of the requesting user. Other options may include 'owner' (dashboard/chart owner) or custom executor implementations. This affects what data is visible in thumbnails based on user permissions.",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "['current_user']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__THUMBNAIL_EXECUTORS"
    },
    {
      "key": "TIME_GRAIN_DENYLIST",
      "title": "Time Grain Denylist",
      "description": "List of time grains to exclude from temporal controls",
      "details": "Time grain options to hide from users in chart creation and exploration interfaces. Common values include 'PT1S' (second), 'PT1M' (minute), 'PT1H' (hour), 'P1D' (day), 'P1W' (week), 'P1M' (month), 'P1Y' (year). Useful for restricting granular time options that may cause performance issues or are not relevant for your data.",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "[]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TIME_GRAIN_DENYLIST"
    },
    {
      "key": "TIME_ROTATE_LOG_LEVEL",
      "title": "Time Rotate Log Level",
      "description": "Logging level for time-based log rotation",
      "details": "Minimum logging level for time-based log rotation functionality. Uses Python logging level constants: 10=DEBUG, 20=INFO, 30=WARNING, 40=ERROR, 50=CRITICAL. Default of 20 (INFO) means INFO level and above messages are included in rotated logs. Used when ENABLE_TIME_ROTATE is True.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "20",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TIME_ROTATE_LOG_LEVEL"
    },
    {
      "key": "TRACKING_URL_TRANSFORMER",
      "title": "Tracking Url Transformer",
      "description": "Function to transform URLs for analytics tracking",
      "details": "Callable that transforms URLs before they are sent to analytics tracking systems. Receives a URL string and returns a modified URL string. Useful for adding tracking parameters, removing sensitive information, or normalizing URLs for analytics purposes. The default function returns URLs unchanged.",
      "type": "Callable",
      "category": "core",
      "group": "",
      "default": "<function instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__TRACKING_URL_TRANSFORMER"
    },
    {
      "key": "TRAP_BAD_REQUEST_ERRORS",
      "title": "Trap Bad Request Errors",
      "description": "Control error handling for bad requests (400 errors)",
      "details": "Flask configuration that controls whether bad request errors (HTTP 400) are trapped and handled by error handlers. When None, uses Flask's default behavior. Set to True to trap these errors, False to let them propagate. Useful for customizing how validation errors and malformed requests are handled.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TRAP_BAD_REQUEST_ERRORS"
    },
    {
      "key": "TRAP_HTTP_EXCEPTIONS",
      "title": "Trap Http Exceptions",
      "description": "Control whether HTTP exceptions are trapped by error handlers",
      "details": "Flask configuration that determines if HTTP exceptions (like 404, 500) are caught and processed by registered error handlers. When True, allows custom error handlers to process HTTP exceptions. When False, HTTP exceptions are handled by Flask's default mechanisms. Useful for implementing custom error pages.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TRAP_HTTP_EXCEPTIONS"
    },
    {
      "key": "TROUBLESHOOTING_LINK",
      "title": "Troubleshooting Link",
      "description": "URL link for troubleshooting documentation",
      "details": "URL that provides troubleshooting information for users experiencing issues. When set, may be displayed in error messages or help interfaces to guide users to self-service support resources. Can point to internal documentation, knowledge base articles, or external help resources.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TROUBLESHOOTING_LINK"
    },
    {
      "key": "TYPE_CHECKING",
      "title": "Type Checking",
      "description": "Enable runtime type checking functionality",
      "details": "Controls whether runtime type checking is enabled in the application. This is typically used in conjunction with Python's typing module and type checkers like mypy. When True, may enable additional runtime validation of type annotations. Generally used for development and debugging purposes.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__TYPE_CHECKING"
    },
    {
      "key": "UPLOADED_CSV_HIVE_NAMESPACE",
      "title": "Uploaded Csv Hive Namespace",
      "description": "Hive namespace for uploaded CSV files",
      "details": "Optional namespace or schema used when uploading CSV files to Hive-compatible data stores. When specified, uploaded CSV data will be stored in this namespace, helping organize and isolate uploaded data from other database objects. If None, uses the default namespace or schema.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__UPLOADED_CSV_HIVE_NAMESPACE"
    },
    {
      "key": "UPLOAD_CHUNK_SIZE",
      "title": "Upload Chunk Size",
      "description": "Chunk size in bytes for file uploads",
      "details": "Size in bytes of each chunk when processing file uploads. Files are processed in chunks to manage memory usage and provide progress feedback for large uploads. Default of 4096 bytes (4KB) provides a balance between memory efficiency and processing speed. Larger values may improve performance but use more memory.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "4096",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__UPLOAD_CHUNK_SIZE"
    },
    {
      "key": "UPLOAD_FOLDER",
      "title": "Upload Folder",
      "description": "Directory path for storing uploaded files",
      "details": "File system path where uploaded files (CSV, Excel, etc.) are temporarily stored during processing. This directory must be writable by the Superset process. Files in this directory may be automatically cleaned up after processing. Consider using a dedicated upload directory outside the application root for security.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "/Users/max/code/superset-worktree/flask_config/superset/static/uploads/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__UPLOAD_FOLDER"
    },
    {
      "key": "URL",
      "title": "Url",
      "description": "URL constructor class or function",
      "details": "Callable used for constructing and parsing URLs throughout the application. Typically references a URL class from a library like urllib or requests. Used internally for URL manipulation, validation, and construction. The default implementation provides standard URL parsing and construction capabilities.",
      "type": "Callable",
      "category": "core",
      "group": "",
      "default": "<type instance>",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__URL"
    },
    {
      "key": "USER_AGENT_FUNC",
      "title": "User Agent Func",
      "description": "Custom function to generate User-Agent strings for HTTP requests",
      "details": "Optional callable that returns a custom User-Agent string for outbound HTTP requests. If None, uses default User-Agent. Useful for customizing how Superset identifies itself to external services.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__USER_AGENT_FUNC"
    },
    {
      "key": "USE_X_SENDFILE",
      "title": "Use X Sendfile",
      "description": "Enable X-Sendfile header for efficient file serving",
      "details": "Flask configuration to use X-Sendfile header when serving files. When enabled, the web server (nginx, Apache) handles file transfers directly instead of passing through Flask, improving performance for large file downloads.",
      "type": "bool",
      "category": "core",
      "group": "",
      "default": "False",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__USE_X_SENDFILE"
    },
    {
      "key": "VERSION_INFO_FILE",
      "title": "Version Info File",
      "description": "Path to the version information JSON file",
      "details": "File path containing version metadata including version string, SHA hash, and build information. Used to display version details in the About section and for internal version tracking.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "/Users/max/code/superset-worktree/flask_config/superset/static/version_info.json",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__VERSION_INFO_FILE"
    },
    {
      "key": "VERSION_SHA",
      "title": "Version Sha",
      "description": "Git commit SHA hash for the current build",
      "details": "Short Git commit hash identifying the exact code revision of this Superset build. Displayed in the About section and used for debugging and version tracking purposes.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "ed73ac47",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__VERSION_SHA"
    },
    {
      "key": "VERSION_SHA_LENGTH",
      "title": "Version Sha Length",
      "description": "Length of the Git SHA hash to display",
      "details": "Number of characters from the Git commit hash to include in version displays. Typically 8 characters provides sufficient uniqueness while keeping displays concise.",
      "type": "int",
      "category": "core",
      "group": "",
      "default": "8",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__VERSION_SHA_LENGTH"
    },
    {
      "key": "VERSION_STRING",
      "title": "Version String",
      "description": "Superset version string in semantic versioning format",
      "details": "Current version of Superset in semantic versioning format (major.minor.patch). Read from version_info.json or package.json. Displayed in the About section and used for compatibility checks.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "0.0.0-dev",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__VERSION_STRING"
    },
    {
      "key": "VIZ_TYPE_DENYLIST",
      "title": "Viz Type Denylist",
      "description": "List of visualization types to disable in the environment",
      "details": "List of chart/visualization type names to exclude from the available options. Useful for restricting certain chart types in specific environments or for compliance reasons. Example: ['pivot_table', 'treemap'].",
      "type": "list",
      "category": "core",
      "group": "",
      "default": "[]",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__VIZ_TYPE_DENYLIST"
    },
    {
      "key": "WEBDRIVER_AUTH_FUNC",
      "title": "Webdriver Auth Func",
      "description": "Custom authentication function for webdriver operations",
      "details": "Optional function to provide authentication for offline webdriver operations (Selenium) or browser context (Playwright). Used when generating reports and thumbnails that require authenticated access to Superset resources.",
      "type": "None",
      "category": "core",
      "group": "",
      "default": "None",
      "external": false,
      "source": "",
      "supports_callable": true,
      "env_var": "SUPERSET__WEBDRIVER_AUTH_FUNC"
    },
    {
      "key": "WEBDRIVER_BASEURL",
      "title": "Webdriver Baseurl",
      "description": "Base URL for webdriver to access the user interface",
      "details": "The base URL that Selenium webdriver uses to query and access the Superset user interface. This is primarily used for generating email reports and thumbnails. Default is 'http://0.0.0.0:8080/'.",
      "type": "str",
      "category": "core",
      "group": "webdriver",
      "default": "http://0.0.0.0:8080/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__WEBDRIVER_BASEURL"
    },
    {
      "key": "WEBDRIVER_BASEURL_USER_FRIENDLY",
      "title": "Webdriver Baseurl User Friendly",
      "description": "User-friendly base URL for email report hyperlinks",
      "details": "The base URL used for hyperlinks in email reports. This should be the publicly accessible URL that users can click to view dashboards and charts. Defaults to WEBDRIVER_BASEURL value.",
      "type": "str",
      "category": "core",
      "group": "webdriver",
      "default": "http://0.0.0.0:8080/",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__WEBDRIVER_BASEURL_USER_FRIENDLY"
    },
    {
      "key": "WEBDRIVER_CONFIGURATION",
      "title": "Webdriver Configuration",
      "description": "Configuration options passed to webdriver",
      "details": "Dictionary containing configuration options passed as-is to the webdriver. Includes 'options' for browser capabilities, preferences, and binary location, and 'service' for webdriver service configuration like log output and service arguments.",
      "type": "dict",
      "category": "core",
      "group": "webdriver",
      "default": "{'options': {'capabilities': {}, 'preferences': {}, 'binary_location': ''}, 'service': {'log_output': '/dev/None', 'service_args': [], 'port': 0, 'env': {}}}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__WEBDRIVER_CONFIGURATION"
    },
    {
      "key": "WEBDRIVER_OPTION_ARGS",
      "title": "Webdriver Option Args",
      "description": "Additional arguments passed to webdriver config object",
      "details": "List of additional command-line arguments passed to the webdriver config object. Default includes '--headless' for headless browser operation. Note: If using Chrome, you may want to add the '--marionette' argument.",
      "type": "list",
      "category": "core",
      "group": "webdriver",
      "default": "['--headless']",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__WEBDRIVER_OPTION_ARGS"
    },
    {
      "key": "WEBDRIVER_TYPE",
      "title": "Webdriver Type",
      "description": "Type of webdriver to use for report generation",
      "details": "Specifies which webdriver to use for generating reports and thumbnails. Options include 'firefox' (requires geckodriver and firefox installations, can be buggy at times) and 'chrome' (requires headless chrome, unable to generate screenshots of elements).",
      "type": "str",
      "category": "core",
      "group": "webdriver",
      "default": "firefox",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__WEBDRIVER_TYPE"
    },
    {
      "key": "WEBDRIVER_WINDOW",
      "title": "Webdriver Window",
      "description": "Window size configuration for webdriver rendering",
      "details": "Dictionary defining window dimensions for webdriver rendering. Includes 'dashboard' size (width, height) for dashboard screenshots, 'slice' size for chart screenshots, and 'pixel_density' for display scaling. This impacts the rendering quality of data visualizations.",
      "type": "dict",
      "category": "core",
      "group": "webdriver",
      "default": "{'dashboard': [1600, 2000], 'slice': [3000, 1200], 'pixel_density': 1}",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__WEBDRIVER_WINDOW"
    },
    {
      "key": "WELCOME_PAGE_LAST_TAB",
      "title": "Welcome Page Last Tab",
      "description": "Configuration for the Welcome page default tab",
      "details": "Controls what content is shown on the Welcome page. Can be 'all' to show all charts and dashboards the user has access to, 'examples' to show only examples, or a custom tuple with title and FAB filter to create a custom view.",
      "type": "str",
      "category": "core",
      "group": "",
      "default": "all",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__WELCOME_PAGE_LAST_TAB"
    },
    {
      "key": "WTF_CSRF_CHECK_DEFAULT",
      "title": "Wtf Csrf Check Default",
      "description": "Enable CSRF protection by default for all forms",
      "details": "Flask-WTF configuration that enables Cross-Site Request Forgery (CSRF) protection by default for all forms. When True, all forms require CSRF tokens unless explicitly exempted. Part of Flask-WTF's security framework.",
      "type": "bool",
      "category": "security",
      "group": "",
      "default": "True",
      "external": true,
      "source": "flask-wtf",
      "supports_callable": false,
      "env_var": "SUPERSET__WTF_CSRF_CHECK_DEFAULT"
    },
    {
      "key": "WTF_CSRF_ENABLED",
      "title": "Wtf Csrf Enabled",
      "description": "Global toggle for CSRF protection in Flask-WTF",
      "details": "Master switch for Cross-Site Request Forgery protection in Flask-WTF. When False, completely disables CSRF protection across the application. Should remain True in production environments for security.",
      "type": "bool",
      "category": "security",
      "group": "",
      "default": "True",
      "external": true,
      "source": "flask-wtf",
      "supports_callable": false,
      "env_var": "SUPERSET__WTF_CSRF_ENABLED"
    },
    {
      "key": "WTF_CSRF_EXEMPT_LIST",
      "title": "Wtf Csrf Exempt List",
      "description": "List of view endpoints exempt from CSRF protection",
      "details": "Flask-WTF configuration listing specific view endpoints that should bypass CSRF token validation. Typically includes API endpoints and views that handle programmatic requests where CSRF protection would interfere with functionality.",
      "type": "list",
      "category": "security",
      "group": "",
      "default": "['superset.views.core.log', 'superset.views.core.explore_json', 'superset.charts.data.api.data', 'superset.dashboards.api.cache_dashboard_screenshot']",
      "external": true,
      "source": "flask-wtf",
      "supports_callable": false,
      "env_var": "SUPERSET__WTF_CSRF_EXEMPT_LIST"
    },
    {
      "key": "WTF_CSRF_FIELD_NAME",
      "title": "Wtf Csrf Field Name",
      "description": "Name of the CSRF token field in forms",
      "details": "Flask-WTF configuration specifying the HTML form field name used for CSRF tokens. Forms must include a hidden input with this name containing a valid CSRF token for submission to succeed when CSRF protection is enabled.",
      "type": "str",
      "category": "security",
      "group": "",
      "default": "csrf_token",
      "external": true,
      "source": "flask-wtf",
      "supports_callable": false,
      "env_var": "SUPERSET__WTF_CSRF_FIELD_NAME"
    },
    {
      "key": "WTF_CSRF_HEADERS",
      "title": "Wtf Csrf Headers",
      "description": "HTTP headers that can contain CSRF tokens",
      "details": "Flask-WTF configuration listing HTTP header names that can carry CSRF tokens as an alternative to form fields. Commonly used by AJAX requests to include CSRF tokens in request headers instead of form data.",
      "type": "list",
      "category": "security",
      "group": "",
      "default": "['X-CSRFToken', 'X-CSRF-Token']",
      "external": true,
      "source": "flask-wtf",
      "supports_callable": false,
      "env_var": "SUPERSET__WTF_CSRF_HEADERS"
    },
    {
      "key": "WTF_CSRF_METHODS",
      "title": "Wtf Csrf Methods",
      "description": "HTTP methods that require CSRF token validation",
      "details": "Flask-WTF configuration defining which HTTP methods require CSRF token validation. Typically includes POST, PUT, PATCH, and DELETE methods. GET and HEAD requests are usually exempt as they should be idempotent.",
      "type": "set",
      "category": "security",
      "group": "",
      "default": "<set with 4 items>",
      "external": true,
      "source": "flask-wtf",
      "supports_callable": false,
      "env_var": "SUPERSET__WTF_CSRF_METHODS"
    },
    {
      "key": "WTF_CSRF_SSL_STRICT",
      "title": "Wtf Csrf Ssl Strict",
      "description": "Enforce stricter CSRF validation over HTTPS",
      "details": "Flask-WTF configuration that enables stricter CSRF token validation when using HTTPS. When True, provides additional security checks for CSRF tokens in SSL/TLS encrypted connections, helping prevent certain attack vectors.",
      "type": "bool",
      "category": "security",
      "group": "",
      "default": "True",
      "external": true,
      "source": "flask-wtf",
      "supports_callable": false,
      "env_var": "SUPERSET__WTF_CSRF_SSL_STRICT"
    },
    {
      "key": "WTF_CSRF_TIME_LIMIT",
      "title": "Wtf Csrf Time Limit",
      "description": "CSRF token expiration time in seconds",
      "details": "Flask-WTF configuration setting the lifetime of CSRF tokens in seconds. Default is 604800 seconds (7 days). After this time, tokens become invalid and forms will need new tokens. Balances security with user experience.",
      "type": "int",
      "category": "security",
      "group": "",
      "default": "604800",
      "external": true,
      "source": "flask-wtf",
      "supports_callable": false,
      "env_var": "SUPERSET__WTF_CSRF_TIME_LIMIT"
    },
    {
      "key": "ZIPPED_FILE_MAX_SIZE",
      "title": "Zipped File Max Size",
      "description": "Maximum allowed size for uploaded zip files",
      "details": "Maximum file size limit in bytes for uploaded zip files. Default is 104857600 bytes (100MB). This prevents users from uploading excessively large zip files that could impact system performance.",
      "type": "int",
      "category": "core",
      "group": "file_limits",
      "default": "104857600",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ZIPPED_FILE_MAX_SIZE"
    },
    {
      "key": "ZIP_FILE_MAX_COMPRESS_RATIO",
      "title": "Zip File Max Compress Ratio",
      "description": "Maximum allowed compression ratio for zip files",
      "details": "Maximum compression ratio allowed for zip files to prevent zip bomb attacks. A compression ratio of 200.0 means the uncompressed content can be up to 200 times larger than the compressed file. This security measure protects against malicious zip files.",
      "type": "float",
      "category": "core",
      "group": "file_limits",
      "default": "200.0",
      "external": false,
      "source": "",
      "supports_callable": false,
      "env_var": "SUPERSET__ZIP_FILE_MAX_COMPRESS_RATIO"
    }
  ],
  "categories": [
    "cache",
    "core",
    "database",
    "security",
    "ui"
  ],
  "groups": [
    "Alert Reports",
    "Application Bootstrap",
    "Authentication",
    "Bug Reporting",
    "CSV Export",
    "CSV Upload",
    "CSV to Hive",
    "Celery Configuration",
    "Color Schemes",
    "Compression",
    "Dashboard Periodical Refresh",
    "Database Migration",
    "Database Polling",
    "Documentation Configuration",
    "Embedded Configuration",
    "Feature Flags",
    "Feature flags",
    "File Paths",
    "File Upload",
    "Flask Configuration",
    "Flask-JWT-Extended Configuration",
    "Formatting",
    "Global Async Queries",
    "HTTP Configuration",
    "JWT Authentication",
    "Logging",
    "Row Limits",
    "SQL Lab",
    "SQL Query Mutation",
    "Screenshot Generation",
    "Search Limits",
    "Security",
    "Session Cookies",
    "Slack Integration",
    "SupersetClient HTTP Retry Configuration",
    "Talisman Security Configuration",
    "Templating",
    "Theme Configuration",
    "UI Customization",
    "Version Information",
    "Visualization",
    "alerts_reports",
    "assets",
    "caching",
    "database",
    "file_limits",
    "logging",
    "security",
    "sqllab",
    "ssh_tunneling",
    "webdriver"
  ],
  "total_count": 410,
  "enriched_count": 348
}
